{"version":3,"sources":["reportWebVitals.js","api/api.js","Redux/dialogReducer.js","Redux/profileReducer.js","Redux/FindUsersReducer.js","Redux/authReduser.js","Redux/appReduser.js","Redux/reduxStore.js","Components/Lefter/Lefter.jsx","Components/Registration/Registration.jsx","Components/Wall/Wall.jsx","Components/UI/Loader/Loader.js","Components/Content/About/About.jsx","Components/Content/About/AboutDataForm.jsx","Components/Settings/Settings.jsx","hoc/withAuthRedirect.js","Components/UI/Loader/FormsControl/FormsControls.js","Components/Messages/Messages.jsx","Components/Messages/MessagesContainer.jsx","Components/FindUsers/findUsers.jsx","Redux/usersSelectors.js","Components/FindUsers/FindUsersContainer.jsx","Components/Content/About/Status/StatusWithHooks.jsx","Components/Content/Pic/Pic.jsx","Components/Content/Posts/Post/Post.jsx","Components/Content/Posts/Posts.jsx","Components/Content/Posts/PostsContainer.jsx","Components/Content/TextContent/TextContent.jsx","Components/Content/Content.jsx","Components/Content/ContentContainer.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Registration/Login.jsx","App.jsx","index.js","Components/Registration/Registration.module.css","Components/Content/About/AboutDataForm.module.css","Components/FindUsers/findUsers.module.css","Components/UI/Loader/Loader.module.css","Components/Messages/Messages.module.css","Components/Header/Header.module.css","Components/Content/Content.module.css","Components/UI/Loader/FormsControl/FormsControls.module.css","Components/Content/Pic/Pic.module.css","Components/Content/Posts/Posts.module.css","Components/Content/Posts/Post/Post.module.css","Components/Lefter/Lefter.module.css","Components/Wall/Wall.module.css","Components/Content/About/Status/Status.module.css","Components/Content/TextContent/TextContent.module.css","Components/Content/About/About.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","headers","baseURL","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","setAboutData","profile","savePhoto","file","formData","FormData","append","authAPI","loginAPI","email","password","rememberMe","captcha","securityAPI","dialogsAPI","message1","message","initialState","dialogs","name","id","messages","newMessageActionCreator","text","type","getDialogs","dispatch","newMessageDialogs","newMessageBody","a","resultCode","response2","posts","likes","setUserStatus","getUserProfile","value","userName","fullData","alert","users","photoURL","location","city","country","friends","totalUsersCount","isFetching","inProgress","setCurrentPage","isFetchingCount","toggleInProgress","login","isAuth","captchaUrl","setUserData","getCaptchaUrlSuccess","payload","getAuthUserData","getCaptchaUrl","url","initialized","reducers","combineReducers","ContentPage","state","action","newPost","stateCopy","push","photos","PostsPage","newMessage","newDialogs","usersPage","map","e","followed","totalCount","filter","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Lefter","className","classes","to","Registration","props","nameInput","React","createRef","emailInput","onSubmit","preventDefault","Reg","ref","onClick","current","console","log","registr","catch","error","Wall","Content2","Loader","center","Loader2","About","useState","editMode","setEditMode","MyName","fullName","deactivateEditMode","isOwner","activateEditMode","AboutData","info","answer","lookingForAJob","lookingForAJobDescription","aboutMe","EditBTN","contacts","Object","keys","key","title","Contact","fss","href","classnames","vk","facebook","website","twitter","instagram","youtube","github","mainLink","socialMedia","AboutDataForm","history","useHistory","MainAbout","heading","initialValues","LookingForAJobDescription","AboutMe","values","htmlFor","component","placeholder","advertisement","src","connect","Settings","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","TextArea","styles","formControl","input","meta","TextForm","formObj","sendMessage","handleSubmit","invalid","disabled","Messages","DialogItem","dialogsItem","i","index","Message","m","messageItems","dialog","messageWindow","sendMessageContainer","MessagesContainer","FindUsers","pages","page","activeClass","active","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","onPageChanged","User","photo","img","alt","some","tofriend","tounfriend","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getInProgress","startNewDialog","getUsersCreator","items","length","p","StatusWithHooks","setStatus","useEffect","currentTarget","onBlur","autoFocus","Pic","large","hidden","for","target","files","setUserPhoto","Post","Fragment","PostsContainer","func","newPostContainer","newPostActionCreator","postsElements","Posts","Images","TextContent","Content","ContentContainer","match","params","authUserId","refreshProfile","prevProps","prevState","snapshot","withRouter","Header","loginBlock","logout","tooltip","flow","HeaderContainer","LoginForm","validate","errors","test","touched","handleChange","handleBlur","isSubmitting","errormessage","Reg2","checkbox","Reg3","App","catchAllUnhandledErrors","reason","promiseRejectionEvent","initialize","addEventListener","removeEventListener","exact","path","render","AppContainer","MainApp","basename","process","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.614a7086.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': \"cd349944-1a1f-484a-81a7-9d5dd0866219\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const usersAPI ={\r\n    getUsers (currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,{\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    friend(userId){\r\n        return instance.post(`follow/${userId}`,{}, {\r\n        })\r\n    },\r\n    unfriend(userId){\r\n        return instance.delete(`follow/${userId}`, {\r\n        })\r\n    },\r\n    getProfile(userId){\r\n    return profileAPI.getProfile(userId);\r\n    }\r\n};\r\nexport const profileAPI ={\r\n    \r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    setAboutData(profile){\r\n        return instance.put(`profile`, profile)\r\n    },\r\n    savePhoto(file){\r\n        const formData = new FormData(); \r\n        formData.append( \r\n        \"myFile\", file\r\n        ); \r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multypart/form-data'\r\n            }\r\n        })\r\n    }\r\n};\r\nexport const authAPI ={\r\n    me () {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\nexport const loginAPI ={\r\n    \r\n    login(email, password, rememberMe, captcha=null){\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\nexport const securityAPI ={\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n};\r\n\r\nexport const dialogsAPI ={\r\n    \r\n    sendNewMessage(message1,userId){\r\n        debugger\r\n        \r\n        return instance.post(`dialogs/${userId}/messages`, {message: message1})\r\n    },\r\n    getListofMessages(userId){\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n    },\r\n    startChatting(userId){\r\n        return instance.put(`dialogs/${userId}`)\r\n    },\r\n    getAllDialogs(){\r\n        return instance.get(`dialogs`)\r\n    }\r\n};","import { dialogsAPI } from \"../api/api\"\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name:'Gri', id:'1'},\r\n        {name:'Ma', id:'2'},\r\n        {name:'Sonya', id:'3'},\r\n        {name:'Dasha', id:'4'}],\r\n    messages: [\r\n        {message:'hello, how are you', id:'1'},\r\n        {message:'bla bla bla bla', id:'2'},\r\n        {message:'i hate this world soo much!', id:'3'}]\r\n}\r\n\r\n\r\nexport const dialogReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'NEWMESSAGE': {\r\n            let newMessage= {\r\n                message: action.message,\r\n                id: 6\r\n            }\r\n            return {...state,\r\n                messages:[...state.messages, newMessage]\r\n            }\r\n        }\r\n        case 'SETDIALOGS': {\r\n            let newDialogs= {\r\n                dialogs: action.dialogs,\r\n                id: action.id\r\n            }\r\n            return {...state,\r\n                dialogs:[...state.dialogs, newDialogs]\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport function newMessageActionCreator(text) {\r\n        return {type: 'NEWMESSAGE', message: text }\r\n    };\r\nexport function setDialogs(data) {\r\n    debugger\r\n        return {type: 'SETDIALOGS', data}\r\n    };\r\n\r\n    export const getDialogs = () =>(dispatch) =>{\r\n        debugger\r\n        dialogsAPI.getAllDialogs()\r\n        .then(response =>{\r\n            dispatch(setDialogs(response.data))\r\n        })\r\n    };\r\n\r\n    export const startNewDialog =(userId) =>{\r\n        return async(dispatch) =>{\r\n            debugger\r\n            //dialogsAPI.getAllDialogs()\r\n            dialogsAPI.startChatting(userId)\r\n            /* .then(response =>{\r\n            dialogsAPI.getAllDialogs()\r\n            }) */\r\n            \r\n        }\r\n    }\r\n    export const newMessageDialogs =(newMessageBody) =>{\r\n        return async(dispatch) =>{\r\n            debugger\r\n            let userId=0\r\n            //dialogsAPI.getAllDialogs()\r\n            /* dialogsAPI.startChatting(userId)\r\n            .then(response =>{\r\n            dialogsAPI.getAllDialogs()\r\n            }) */\r\n                \r\n            let response = await dialogsAPI.sendNewMessage(newMessageBody, userId)\r\n                if(response.data.resultCode===0){\r\n                let response2= await dialogsAPI.getListofMessages(userId)\r\n                dispatch(newMessageActionCreator(response2))\r\n                }\r\n            \r\n        \r\n        }\r\n    }","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n            {message: 'Helloy idiotos!', id:1 , likes:3},\r\n            {message: 'Why live is soo easy? 0_o', id:2 , likes:100},\r\n        ],\r\n        profile: null,\r\n        status: \"\"\r\n}\r\n\r\n\r\nexport  const profileReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADDPOST':{\r\n            \r\n            let newPost= {\r\n                message: action.message,\r\n                id: 5,\r\n                likes: 0\r\n            }\r\n            let stateCopy={...state}\r\n            stateCopy.posts=[...state.posts]\r\n            stateCopy.posts.push(newPost)\r\n            //stateCopy.action.message=''\r\n        \r\n            return stateCopy\r\n        }\r\n        case 'SETUSERPROFILE':{\r\n            return {...state, profile:action.profile}\r\n        }\r\n        case 'SETSTATUS':{\r\n            return {...state, status:action.status}\r\n        }\r\n        case 'SAVEPHOTO':{\r\n            return {...state, profile: {...state.profile, photos:action.photos}}\r\n        }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n    export function newPostActionCreator(text) {\r\n        return {type: 'ADDPOST', message: text }\r\n    };\r\n    export function setUserProfile(profile) {\r\n        return {type: 'SETUSERPROFILE', profile }\r\n    };\r\n    export function setUserStatus(status) {\r\n        return {type: 'SETSTATUS', status }\r\n    };\r\n    export function savePhoto(photos) {\r\n        return {type: 'SAVEPHOTO', photos }\r\n    };\r\n    export const setUserPhoto = (file) => async(dispatch) =>{\r\n        \r\n        let response =await profileAPI.savePhoto(file)\r\n        if(response.data.resultCode===0){\r\n            dispatch(savePhoto(response.data.data.photos))\r\n        }\r\n    };\r\n    export const getUserProfile = (userId) =>(dispatch) =>{\r\n        usersAPI.getProfile(userId)\r\n        .then(response =>{\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n    };\r\n    export const getStatus = (userId) =>(dispatch) =>{\r\n        profileAPI.getStatus(userId)\r\n        .then(response =>{\r\n            dispatch(setUserStatus(response.data))\r\n        })\r\n    };\r\n    export const updateStatus = (status) =>(dispatch) =>{\r\n        profileAPI.updateStatus(status)\r\n        .then(response =>{\r\n            if(response.data.resultCode===0){\r\n            dispatch(setUserStatus(status))\r\n        }\r\n        })\r\n    };\r\n\r\n    function errorResponse(messages){\r\n        \r\n        alert(messages)\r\n    }\r\n    export const setAboutData = (value,userName, userId) => async(dispatch) =>{\r\n        debugger\r\n        let fullData={'FullName':userName, ...value }\r\n        let response= await profileAPI.setAboutData(fullData)\r\n        \r\n            if(response.data.resultCode===0){\r\n                dispatch(getUserProfile(userId))\r\n            }\r\n            if(response.data.resultCode!==0){\r\n                errorResponse(response.data.messages)\r\n            }\r\n        \r\n    }\r\n\r\n\r\n\r\n    ","import {usersAPI} from '../api/api'\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n        {photoURL:'https://homm3sod.ru/upload/iblock/2d1/Hero_Alamar.png',name: 'Robert', location: {city:'Dubna',country:'Russia'} , status:'hate', friends: false, id:1},\r\n        {photoURL:'https://homm3sod.ru/upload/iblock/013/Hero_Grindan.png',name: 'Grindan', location: {city:'Skovde',country:'Sweden'}  , status:'Jesus loves you', friends: true, id:2},\r\n        {photoURL:'https://homm3sod.ru/upload/iblock/e78/Hero_Labetha.png',name: 'Dasha', location: {city:'Moscow',country:'Russia'}  , status:'im always learning',friends: true, id:3}\r\n    ],\r\n    pageSize:5,\r\n    totalUsersCount:54,\r\n    currentPage:1,\r\n    isFetching:false,\r\n    inProgress: [],\r\n    /* friends:{\r\n        GrishaId:{\r\n            GrishaId: SashaID,\r\n            GrishaId: MishaID,\r\n            GrishaId: SoniaID,\r\n            GrishaId: PetiaID\r\n        },\r\n        SashaID:{\r\n            SashaID: SashaID,\r\n            SashaID: MishaID,\r\n            SashaID: SoniaID,\r\n            SashaID: PetiaID\r\n        }\r\n    } */\r\n}\r\n\r\n\r\nexport  const FindUsersReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADDFRIEND':{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(e =>{\r\n                    if(e.id === action.id) {\r\n                        return {...e, followed: true}\r\n                    }\r\n                    return e\r\n                })\r\n            }\r\n        }\r\n        case 'REMOVEFRIEND':{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(e =>{\r\n                    if(action.id === e.id){\r\n                        return {...e, followed: false}\r\n                    }\r\n                    return e\r\n                })\r\n            }\r\n        }\r\n        case 'SETUSERS':{\r\n            \r\n            return { ...state, users: [ ...action.users]}\r\n        }\r\n        case 'CURRENTPAGE':{\r\n            \r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case 'TOTALUSERSCOUNT':{\r\n            \r\n            return { ...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case 'ISFETCHINGTOGGLE':{\r\n            \r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case 'INPROGRESS':{\r\n            \r\n            return { ...state,\r\n                inProgress: action.inProgress \r\n                ? [...state.inProgress, action.userId]\r\n                : [state.inProgress.filter(id=>id!==action.userId)] }\r\n        }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport function friendsAC(id) {\r\n        return {type: 'ADDFRIEND', id  }\r\n    };\r\nexport function unFriendsAC(id) {\r\n        return {type: 'REMOVEFRIEND', id }\r\n    };\r\nexport function setUsersAC(users) {\r\n        return {type: 'SETUSERS', users }\r\n    };\r\nexport function setCurrentPage(currentPage) {\r\n    \r\n        return {type: 'CURRENTPAGE', currentPage }\r\n    };\r\n    export function setTotalUsersCount(totalCount) {\r\n    \r\n        return {type: 'TOTALUSERSCOUNT', totalCount}\r\n    };\r\n    export function isFetchingCount(isFetching) {\r\n        return {type: 'ISFETCHINGTOGGLE', isFetching}\r\n    };\r\n    export function toggleInProgress(inProgress, userId) {\r\n        return {type: 'INPROGRESS', inProgress, userId}\r\n    };\r\n    \r\n    export const getUsersCreator =(currentPage, pageSize) =>{\r\n        return async(dispatch) =>{\r\n            dispatch(isFetchingCount(true))\r\n            dispatch(setCurrentPage(currentPage))\r\n            let data= await usersAPI.getUsers(currentPage, pageSize)\r\n                dispatch(isFetchingCount(false))\r\n                dispatch(setUsersAC(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n        }\r\n    }\r\n\r\n    export const tofriend =(userId) =>{\r\n        return async(dispatch) =>{\r\n            dispatch(toggleInProgress(true, userId))\r\n            let response = await usersAPI.friend(userId)\r\n                \r\n                    if(response.data.resultCode===0){\r\n                        dispatch(friendsAC(userId))\r\n                    }\r\n                    dispatch(toggleInProgress(false, userId))\r\n                \r\n        }\r\n    }\r\n    export const tounfriend =(userId) =>{\r\n        return async(dispatch) =>{\r\n            dispatch(toggleInProgress(true, userId))\r\n            let response= await usersAPI.unfriend(userId)\r\n                \r\n                    if(response.data.resultCode===0){\r\n                        dispatch(unFriendsAC(userId))\r\n                    }\r\n                    dispatch(toggleInProgress(false, userId))\r\n                \r\n        \r\n        } \r\n    }","import { authAPI, loginAPI, securityAPI } from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login:null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\n\r\nexport  const authReducer = (state=initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case 'SETUSERDATA':{\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case 'GETCAPTCHA':{\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n    \r\n    export function setUserData(userId, email, login, isAuth) {\r\n        return {type: 'SETUSERDATA', data:{ userId, email, login, isAuth} }\r\n    };\r\n    export function getCaptchaUrlSuccess(captchaUrl) {\r\n        return {type: 'GETCAPTCHA', payload:{ captchaUrl} }\r\n    };\r\n\r\n    export const getAuthUserData = () => (dispatch) =>{\r\n        return authAPI.me()\r\n        .then(response =>{\r\n            if(response.data.resultCode===0){\r\n                let {id, email, login} =response.data.data\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        })\r\n    }\r\n    function errorResponse(messages){\r\n        \r\n        alert(messages)\r\n    }\r\n    export const login = (email, password, rememberMe, captcha) => async(dispatch) =>{\r\n        let response= await loginAPI.login(email, password, rememberMe, captcha)\r\n        debugger\r\n            if(response.data.resultCode===0){\r\n                dispatch(getAuthUserData())\r\n            }\r\n            \r\n            if(response.data.resultCode!==0){\r\n                if(response.data.resultCode===10){\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n                errorResponse(response.data.messages)\r\n            }\r\n    }\r\n    export const getCaptchaUrl = () => async(dispatch) =>{\r\n        debugger\r\n        const response= await securityAPI.getCaptchaUrl()\r\n        const captchaUrl= response.data.url;\r\n\r\n        dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n            \r\n    }\r\n    export const logout = () => async(dispatch) =>{\r\n        let response = await loginAPI.logout()\r\n        \r\n            if(response.data.resultCode===0){\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n        \r\n    }\r\n\r\n\r\n    ","\r\nimport { getAuthUserData } from \"./authReduser\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nexport  const appReducer = (state=initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case 'SETINITIALIZED':{\r\n            //debugger\r\n            return {\r\n                ...state,\r\n                initialized:true\r\n            }\r\n        }\r\n        \r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n \r\nexport function initializedSuccess() {\r\n        return {type: 'SETINITIALIZED' }\r\n    };\r\n\r\n    export const initialize = () => (dispatch) =>{\r\n        let promise = dispatch(getAuthUserData())\r\n\r\n        promise.then(()=>{\r\n            dispatch(initializedSuccess())\r\n            \r\n        })\r\n    }","import {applyMiddleware, combineReducers, createStore,  compose} from 'redux'\r\nimport {dialogReducer} from './dialogReducer'\r\nimport {profileReducer} from './profileReducer'\r\nimport {FindUsersReducer} from './FindUsersReducer'\r\nimport { authReducer } from './authReduser';\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { appReducer } from './appReduser';\r\n\r\nlet reducers= combineReducers({\r\n    ContentPage:profileReducer,\r\n    PostsPage:dialogReducer,\r\n    usersPage:FindUsersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nwindow.store=store\r\n\r\nexport default store;","import { NavLink } from 'react-router-dom'\r\nimport classes from './Lefter.module.css'\r\n\r\nexport default function Lefter (){\r\n    return(\r\n        <div className={classes.Lefter}>\r\n        <ul>\r\n            <li><NavLink to='/profile'>My Page</NavLink></li>\r\n            {/* <li><NavLink to='/wall'>Wall</NavLink></li> */}\r\n            <li><NavLink to='/messages'>Messages</NavLink></li>\r\n            <li><NavLink to='/settings'>Settings</NavLink></li>\r\n            <li><NavLink to='/find'>Find User</NavLink></li>\r\n        </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport classes from './Registration.module.css'\r\nimport * as axios from 'axios'\r\n\r\n/* const LoginForm = (props)=>{\r\n    <form onSubmit={handleSubmit}>\r\n            <div className={classes.Reg}>Name:</div><input type=\"text\" ref={nameInput} /><br/>\r\n            <div className={classes.Reg}>Email:</div><input type=\"text\" ref={emailInput}/><br/>\r\n            <button onClick={() =>{registration(nameInput.current.value,emailInput.current.value)}}>Ok</button>\r\n        \r\n        </form>\r\n} */\r\n\r\nexport default function Registration (props){\r\n    \r\n    function registration(name, email) {\r\n        \r\n        axios.post('https://react-quiz-c5f6b.firebaseio.com/users.json', {\r\n            name,\r\n            email\r\n        })\r\n        .then(function (response) {\r\n            nameInput.current.value=''\r\n            emailInput.current.value=''\r\n            console.log(response);\r\n            props.registr()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    let nameInput=React.createRef()\r\n    let emailInput=React.createRef()\r\n\r\n    let handleSubmit= (e) =>{\r\n        e.preventDefault()\r\n    }\r\n        \r\n    return(\r\n        \r\n        <div className={classes.Registration}>\r\n        <div>Registration</div>\r\n        <hr/>\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={classes.Reg}>Name:</div><input type=\"text\" ref={nameInput} /><br/>\r\n            <div className={classes.Reg}>Email:</div><input type=\"text\" ref={emailInput}/><br/>\r\n            <button onClick={() =>{registration(nameInput.current.value,emailInput.current.value)}}>Ok</button>\r\n        \r\n        </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport classes from'./Wall.module.css';\r\n\r\n\r\nfunction Wall () {\r\n    \r\n        return (\r\n            <div className={classes.Content2}>\r\n                \r\n                \r\n                Тут будет стена\r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Wall;\r\n","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}><div className={classes.Loader2}>\r\n        <div><div></div><div></div><div></div></div><div><div></div><div></div><div></div></div>\r\n        </div></div>\r\n    </div>\r\n)\r\n\r\nexport default Loader\r\n\r\n\r\n","import { useState} from 'react'\r\nimport Loader from '../../UI/Loader/Loader'\r\nimport classes from './About.module.css'\r\nimport AboutDataForm from './AboutDataForm'\r\nimport classnames from 'classnames'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default function About (props){\r\n    \r\n    let [editMode, setEditMode] = useState(false)\r\n    \r\n    if(!props.props.profile ){\r\n        return <Loader />\r\n    }\r\n    \r\n    const activateEditMode =() =>{\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode =()=>{\r\n        setEditMode(false)\r\n        //props.updateAbout(props)\r\n    }\r\n\r\n    return(\r\n        <div /* className={classes.About} */> \r\n            \r\n            \r\n            <div className={classes.MyName}>{props.props.profile.fullName}\r\n            </div>\r\n            {editMode\r\n            ? <AboutDataForm {...props} deactivateEditMode={deactivateEditMode} setAboutData={props.setAboutData}/> \r\n            : <AboutData {...props} isOwner={props.isOwner}  activateEditMode={activateEditMode}/>}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nlet AboutData=(props)=>{\r\n    //debugger\r\n    return<div className={classes.About}>\r\n        \r\n        <div className={classes.info}>Looking for a job: </div>\r\n            <div className={classes.answer}>{props.props.profile.lookingForAJob? 'yes':'no'}</div>\r\n        <div className={classes.info}>My hard skills: </div>\r\n            <div className={classes.answer}>{props.props.profile.lookingForAJobDescription}</div>\r\n        <div className={classes.info}>About me:</div>\r\n        <div className={classes.answer}>{props.props.profile.aboutMe}</div>\r\n                \r\n                \r\n            {props.isOwner &&<div><NavLink to={'/settings'}><button className={classes.EditBTN}>Edit</button></NavLink></div>}\r\n                <div className={classes.contacts}>\r\n                    {Object.keys(props.props.profile.contacts).map(key=>{\r\n                        return <Contact  key={key} title={key} name={'classes.'+key} value={props.props.profile.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n        \r\n    </div>\r\n}\r\n\r\nexport let Contact =({title,value, name})=>{\r\n    \r\n    return (\r\n        true? <ul className={classes.fss}>\r\n            <a href={value} >\r\n            <li className={classnames({[classes.vk]: title==='vk'},{[classes.facebook]: title==='facebook'},\r\n                {[classes.website]: title==='website'},{[classes.twitter]: title==='twitter'},\r\n                {[classes.instagram]: title==='instagram'},{[classes.youtube]: title==='youtube'},\r\n                {[classes.github]: title==='github'},{[classes.mainLink]: title==='mainLink'},\r\n                classes.socialMedia)}></li>\r\n            </a>\r\n        </ul> \r\n        : null\r\n        \r\n    )\r\n\r\n    //return <div className={classnames(classes.socialMedia, name, { [classes.foo]: !value })}>{title}: {value}</div>\r\n}\r\n","import classes from './AboutDataForm.module.css'\r\nimport Contact from './About'\r\nimport { Formik, Field, Form } from 'formik';\r\nimport {Redirect, NavLink,  useHistory } from 'react-router-dom'\r\n\r\nlet AboutDataForm=(props)=>{\r\n    debugger\r\n    const history = useHistory();\r\n    \r\n    return<div className={classes.MainAbout}>\r\n        <div className={classes.heading}>Here you can edit information about yourself </div>\r\n        <Formik\r\n            initialValues={{\r\n            lookingForAJob: (!props.props.profile.lookingForAJob? false :props.props.profile.lookingForAJob),\r\n            LookingForAJobDescription: (props.props.profile.lookingForAJobDescription? props.props.profile.lookingForAJobDescription :''),\r\n            AboutMe: (props.props.profile.aboutMe? props.props.profile.aboutMe :\"\")\r\n            }}\r\n            onSubmit={async (values) => {\r\n                \r\n                props.setAboutData(values,props.props.profile.fullName,props.props.profile.userId)\r\n                \r\n                history.push(\"/profile\")\r\n                //props.history.location.pathname.push(\"/profile\");\r\n                //props.history.location.pathname=\"/profile\"\r\n            }}\r\n            >\r\n            {({ values }) => (\r\n            <Form><div className={classes.About}>\r\n                <label className={classes.info}>Looking for a job</label>\r\n                    <div><Field type=\"checkbox\" name=\"lookingForAJob\" />\r\n                    {`${values.lookingForAJob? \"yes\": \"no\"}`}</div>\r\n                \r\n                <label className={classes.info} htmlFor=\"LookingForAJobDescription\">My hard skills:</label> \r\n                <Field id=\"LookingForAJobDescription\" component=\"textarea\" name=\"LookingForAJobDescription\" placeholder=\"HTML SCC JS React Redux\" />\r\n                \r\n                <label className={classes.info} htmlFor=\"AboutMe\">About me: </label>\r\n                <Field id=\"AboutMe\" component=\"textarea\" name=\"AboutMe\" placeholder=\"describe yourself\" />\r\n                <div className={classes.advertisement} ><img className={classes.advertisement} src={'https://sun9-50.userapi.com/impf/c836137/v836137892/50859/gSlB71Q9BVE.jpg?size=1280x960&quality=96&proxy=1&sign=a16c1b01aadf358376f83137b2c8ec1e&type=album'}/>\r\n                    place for advertisement</div>\r\n                <div>\r\n                    {Object.keys(props.props.profile.contacts).map(key=>{\r\n                        return<div key={key}>\r\n                            <label className={classes.About} htmlFor=\"Contacts\">\r\n                                {key}:\r\n                                <Field id={key} name={`contacts.${key}`}  value={props.props.profile.contacts[key]} placeholder={key} />\r\n                            </label>\r\n                        </div>\r\n                    })}\r\n                </div> \r\n\r\n                <div></div>\r\n                <div><button type=\"submit\">Submit</button><NavLink to={'./profile/'}><button >cancel</button></NavLink></div>\r\n            </div></Form>\r\n        )}\r\n        </Formik>\r\n        \r\n                \r\n                {/* <div>\r\n                    {Object.keys(props.props.profile.contacts).map(key=>{\r\n                        return<Contact key={key} title={key} value={props.props.profile.contacts[key]}/>\r\n                    })}\r\n                </div> */}\r\n    </div>\r\n}\r\n\r\nexport default AboutDataForm","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport AboutDataForm from '../Content/About/AboutDataForm';\r\nimport {setAboutData} from '../../Redux/profileReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport classes from'./Settings.module.css';\r\n\r\n\r\nfunction Settings (props) {\r\n    \r\n    if(props.state.profile===null)return (<Redirect to={'/profile'}/>)\r\n        \r\n    return (\r\n        <div className={classes.Settings}>\r\n            \r\n            \r\n            <AboutDataForm props={props.state} isOwner={props.isOwner} setAboutData={props.setAboutData}/>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\nconst mapStateToProps=(state) =>({\r\n    state: state.ContentPage\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAboutData})(Settings);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            \r\n            if(!this.props.isAuth)return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import styles from './FormsControls.module.css'\r\n\r\nexport const TextArea = (props) =>{\r\n    \r\n    return(\r\n        <div className={styles.formControl+' '+styles.error}>\r\n            <div>\r\n            <textarea {...props.input}/>\r\n            </div>\r\n            {props.meta.error && props.meta.error && <span>some error</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink} from 'react-router-dom';\r\nimport classes from'./Messages.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { TextArea } from '../UI/Loader/FormsControl/FormsControls';\r\n\r\nfunction Messages (props) {\r\n    debugger\r\n    \r\n    \r\n    function DialogItem  (props)  {\r\n    return <div><NavLink to={'/messages/'+props.id}>{props.name}</NavLink></div>\r\n}\r\n\r\n    let dialogsItem = props.dialogs.map((i) => {\r\n        return <DialogItem name={i.name} key={i.index} id={i.id}/>\r\n    })\r\n\r\n    let Message = (props) => {\r\n    return <div>{props.m}</div>\r\n    }\r\n    let messageItems = props.message.map((i) => {\r\n        debugger\r\n        return <Message m={i.message} key={i.id} />\r\n    })\r\n\r\n    //let textreference=React.createRef()\r\n\r\n    function sendMessage(formObj){\r\n        \r\n        props.sendMessageContainer(formObj)\r\n        \r\n    }\r\n    \r\n    //if(!props.isAuth)return <Redirect to={'/login'}/>\r\n    \r\n\r\n        return (\r\n            <div className={classes.Messages}>\r\n                <div className={classes.dialog}>\r\n                    { dialogsItem }\r\n                    \r\n                </div>\r\n                <div className={classes.messageWindow}>\r\n                    <div>{ messageItems  }</div>\r\n                    {/* <div><textarea ref={textreference}/><button onClick={() =>sendMessage(props)}>send</button></div> */}\r\n                    \r\n                    <TextForm sendMessage={sendMessage}/>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n//const maxLength10=maxLength(10)\r\n\r\nconst TextForm = (props)=>{\r\n    return (\r\n        <Form onSubmit={(formObj)=>{\r\n                props.sendMessage(formObj)\r\n                console.log(formObj);}\r\n                }\r\n            //validate={ required, maxLength10}\r\n            >\r\n            {({ handleSubmit, invalid }) => (\r\n                <form onSubmit={handleSubmit}\r\n                >\r\n                <Field  component={TextArea}  type=\"textarea\" placeholder='enter message'\r\n                name='newMessageBody' />\r\n                <button type='submit' disabled={invalid}>🐷</button>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Messages;\r\n","\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {newMessageActionCreator, newMessageDialogs, getDialogs } from '../../Redux/dialogReducer'\r\nimport {getStatus} from '../../Redux/profileReducer'\r\nimport Messages from './Messages';\r\n\r\nclass MessagesContainer extends Component {\r\n    \r\n    componentDidMount() {\r\n        debugger\r\n        //this.props.getStatus(13195)\r\n        this.props.getDialogs()\r\n    }\r\n    /* sendMessageContainer = (formObj) => {\r\n            //this.props.newMessageDialogs(formObj.newMessageBody)\r\n            newMessageActionCreator(formObj.newMessageBody)\r\n            formObj.newMessageBody=\"\"\r\n        } */\r\n    render(){\r\n        return (\r\n            <Messages dialogs={this.props.dialogs} message={this.props.message} sendMessageContainer={this.props.sendMessageContainer} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    \r\n    return {\r\n        dialogs: state.PostsPage.dialogs,\r\n        message: state.PostsPage.messages,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch) => { \r\n    \r\n    return{\r\n        sendMessageContainer: (formObj) => {\r\n            //dispatch(newMessageDialogs(formObj.newMessageBody))\r\n            dispatch(newMessageActionCreator(formObj.newMessageBody))\r\n            formObj.newMessageBody=\"\"\r\n        },\r\n        \r\n        newMessageDialogs,\r\n        getDialogs, getStatus\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(MessagesContainer);\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from'./findUsers.module.css';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nfunction FindUsers (props) {\r\n    //debugger\r\n    //let pagesCount = Math.ceil(props.props.totalUsersCount/props.props.pageSize);\r\n    let pages=[];\r\n    for(let i=1; i<=6; i++){\r\n        pages.push(i)\r\n        \r\n    }\r\n        return (\r\n            \r\n            <div className={classes.FindUsers}>\r\n                <div className={classes.page}>\r\n                    <Pagination\r\n                    activeClass={classes.active}\r\n                    activePage={props.props.currentPage}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={props.props.totalUsersCount}\r\n                    pageRangeDisplayed={5}\r\n                    onChange={props.onPageChanged}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className={classes.page}>\r\n                    \r\n                    {pages.map(p => {\r\n                        return <span key={p.id} className={props.props.currentPage === p ? classes.selectedPage : null}\r\n                        \r\n                        onClick={() => { props.onPageChanged(p) }}\r\n                        >{p}</span>\r\n                    })}\r\n                    \r\n                    \r\n                </div> */}\r\n            {\r\n                props.props.users.map(e =>\r\n                <div key={e.id} className={classes.User}>\r\n                    <span>\r\n                        <div className={classes.photo}>\r\n                            <NavLink to={'./profile/'+e.id}>\r\n                                <img className={classes.img} src={e.photoURL !=null ? e.photoURL : 'https://image.pngaaa.com/430/263430-small.png'} alt=''/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                            e.followed===false ? <button disabled={props.props.inProgress.some(id => id===e.id)} onClick={()=>{\r\n                                props.props.tofriend(e.id)\r\n                                }}>addFriend</button>\r\n                            :<button disabled={props.props.inProgress.some((id) => id===e.id)} onClick={()=>{\r\n                                props.props.tounfriend(e.id)\r\n                                }} >UnFriend</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <div className={classes.info}>\r\n                        \r\n                            <div className={classes.name}>{e.name}</div>\r\n                            {/* <div className={classes.info}>{e.location.city }</div>\r\n                            <div className={classes.info}>{e.location.country}</div> */}\r\n                        \r\n                        <span>\r\n                            <div className={classes.status}>\"{e.status}\"</div>\r\n                        </span>\r\n                    \r\n                    {/* <button onClick={()=>{\r\n                                props.props.startNewDialog(e.id)\r\n                                }} >Start dialog</button> */}\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default FindUsers;\r\n","export const getUsers =(state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize =(state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount =(state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage =(state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching =(state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getInProgress =(state) => {\r\n    return state.usersPage.inProgress\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { tofriend, tounfriend, setCurrentPage, \r\n    isFetchingCount,  getUsersCreator, toggleInProgress } from '../../Redux/FindUsersReducer'\r\nimport {startNewDialog} from '../../Redux/dialogReducer'\r\nimport FindUsers from './findUsers'\r\nimport Loader from '../UI/Loader/Loader'\r\nimport { compose } from 'redux'\r\nimport { getPageSize, getUsers, getTotalUsersCount, getCurrentPage,\r\n    getInProgress, getIsFetching, } from '../../Redux/usersSelectors'\r\n\r\nfunction FindUsersContainer (props) {\r\n    if(props.users.length===3){\r\n    props.getUsersCreator(props.currentPage, props.pageSize);\r\n    }\r\n    /* if(props.users.length===3){\r\n        props.isFetchingCount(true)\r\n        getUsers(props.currentPage, props.pageSize).then(data =>{\r\n            props.isFetchingCount(false)\r\n            props.setUsers(data.items)\r\n            props.setTotalUsersCount(data.totalCount)\r\n            console.log(data.items)\r\n            \r\n        })\r\n    }    */\r\n    let onPageChanged = (p)=>{\r\n        props.getUsersCreator(p, props.pageSize)\r\n    }\r\n    \r\n        return (\r\n            <>\r\n            {\r\n            props.isFetching=== false ? \r\n            <FindUsers props={props} onPageChanged={onPageChanged}/>\r\n            :<Loader />\r\n            }\r\n            </>\r\n        )\r\n    \r\n}\r\n\r\n\r\n/* let mapStateToProps=(state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount:state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        inProgress: state.usersPage.inProgress\r\n    }\r\n} */\r\nlet mapStateToProps=(state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount (state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        inProgress: getInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        tounfriend,\r\n        tofriend,\r\n        startNewDialog,\r\n        setCurrentPage: setCurrentPage,\r\n        isFetchingCount: isFetchingCount,\r\n        toggleInProgress,\r\n        getUsersCreator\r\n        })\r\n)(FindUsersContainer)\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport classes from './Status.module.css'\r\n\r\n\r\nconst StatusWithHooks=(props)=> {\r\n    \r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    \r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode =() =>{\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode =()=>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange =(e)=>{\r\n        //debugger\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {!editMode &&\r\n                <div className={classes.status}>\r\n                    {!props.status \r\n                    ? <div onClick={activateEditMode}>\r\n                        {\"no status\"}</div>\r\n                    : <div onClick={activateEditMode}>\r\n                        {props.status}</div>\r\n                    }\r\n                    \r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input \r\n                        onChange={onStatusChange} \r\n                        onBlur={deactivateEditMode}  \r\n                        autoFocus={true} \r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default StatusWithHooks","import StatusWithHooks from '../About/Status/StatusWithHooks'\r\nimport classes from './Pic.module.css'\r\n\r\nexport default function Pic (props){\r\n    \r\n    let onMainPhotoSet=(e)=>{\r\n        debugger\r\n        if(e.target.files.length){\r\n            props.setUserPhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    let photo=()=>{\r\n        if(props.props.profile!=null){\r\n            if(props.props.profile.photos!=null){\r\n                return props.props.profile.photos.small\r\n            }\r\n        }\r\n        return \r\n    }\r\n    return(\r\n        <div className={classes.Pic}>\r\n        {props.props.profile!=null ?\r\n        <img src={props.props.profile.photos.large!=null ? props.props.profile.photos.large :'https://sun9-33.userapi.com/impf/xZea1cGfLOj-MhChgkIKsgDSZGEuGSOVHs1WHA/YtDlw7A5LTo.jpg?size=2476x1212&quality=96&proxy=1&sign=9da40de598b9f92db3f300c6d278e04d'} alt=\"\"></img>\r\n        :<img src={'https://sun9-33.userapi.com/impf/xZea1cGfLOj-MhChgkIKsgDSZGEuGSOVHs1WHA/YtDlw7A5LTo.jpg?size=2476x1212&quality=96&proxy=1&sign=9da40de598b9f92db3f300c6d278e04d'} alt=\"\"></img>\r\n        }\r\n            {props.isOwner &&  \r\n                <span>\r\n                    <input className={classes.hidden} name=\"file\" id=\"file\" type={'file'} /> \r\n                    <label for=\"file\" onChange={onMainPhotoSet}></label>\r\n                </span>\r\n            } \r\n        <StatusWithHooks status={props.props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nexport default function Post(props) {\r\n    \r\n        return (\r\n        <React.Fragment>\r\n            <div className={classes.message}>{props.message}</div>\r\n            <div className={classes.likes}>\r\n            <img src=\"https://img.icons8.com/doodle/48/000000/facebook-like.png\"  alt=\"Foo eating a sandwich.\"/>\r\n            {props.likes}\r\n            </div>\r\n        </React.Fragment>\r\n        \r\n        )\r\n    }","import React from 'react'\r\nimport classes from './Posts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Form, Field} from 'react-final-form'\r\n\r\n\r\nexport default function Posts (props){\r\n    //debugger\r\n    \r\n\r\n    let postsElements = props.posts.map(e =>{ return <Post message={e.message} key={e.id} id={e.id} likes={e.likes} />})\r\n    \r\n    \r\n    let newPost = (formObj) => {\r\n        props.newPostContainer(formObj)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className={classes.Posts}> \r\n                <TextForm newPost={newPost}/> \r\n                {/* <button onClick={ newPost }>send</button> */}\r\n            </div>\r\n            \r\n            <div><img className={classes.Images} src='https://homm3sod.ru/upload/iblock/5d4/Hero_Ufretin.png' alt=\"Foo eating a sandwich.\"/> Nikname</div>\r\n            <div>{postsElements}</div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst TextForm = (props)=>{\r\n    return (\r\n        <Form onSubmit={(formObj)=>{\r\n            props.newPost(formObj)\r\n                console.log(formObj);}\r\n                }>\r\n            {({ handleSubmit }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                <Field  component='textarea' type=\"textarea\" placeholder='enter message' name='newMessageBody' />\r\n                <button type='submit'>🐷</button>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}","\r\nimport Posts from './Posts'\r\nimport {newPostActionCreator} from '../../../Redux/profileReducer'\r\nimport { connect } from 'react-redux'\r\n\r\n/*  function PostsContainer (props){\r\n    \r\n    \r\n    let newPostContainer = (textReference) => {\r\n        let text=textReference.current.value\r\n        \r\n        props.func(newPostActionCreator(text))\r\n        textReference.current.value=\" \"\r\n    }\r\n\r\n    return(\r\n        <Posts posts={props.posts} newPostContainer={newPostContainer}/>\r\n    )\r\n} */\r\n\r\nlet mapDispatchToProps = (func) => {\r\n    return{\r\n        newPostContainer:  (formObj) => {\r\n            let text=formObj.newMessageBody\r\n            \r\n            func(newPostActionCreator(text))\r\n            formObj.newMessageBody=\"\"\r\n        }\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return{\r\n        posts: state.ContentPage.posts\r\n    }\r\n}\r\n\r\nconst PostsContainer=connect(mapStateToProps,mapDispatchToProps)(Posts)\r\n\r\n\r\nexport default PostsContainer","import classes from './TextContent.module.css'\r\n\r\nexport default function TextContent (){\r\n    return(\r\n        <div className={classes.TextContent}> This is your wall</div>\r\n    )\r\n}","import React from 'react'\r\nimport About from './About/About';\r\nimport classes from'./Content.module.css';\r\n\r\nimport Pic from './Pic/Pic';\r\n\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport TextContent from './TextContent/TextContent';\r\n\r\n\r\n\r\nfunction Content (props) {\r\n    \r\n    \r\n    \r\n        return (\r\n            <div className={classes.Content2}>\r\n                \r\n                <React.Fragment>\r\n                <About props={props.state} isOwner={props.isOwner} setAboutData={props.setAboutData}/>\r\n                <Pic props={props.state} getStatus={props.getStatus} setUserPhoto={props.setUserPhoto}\r\n                isOwner={props.isOwner} updateStatus={props.updateStatus}/>\r\n                <TextContent />\r\n                <PostsContainer />\r\n                </React.Fragment>\r\n                \r\n                \r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Content;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content';\r\nimport classes from'./Content.module.css';\r\nimport {getUserProfile,getStatus, updateStatus, setUserPhoto, setAboutData} from '../../Redux/profileReducer'\r\nimport {  withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ContentContainer extends React.Component {\r\n    \r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId=this.props.authUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n        /* axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId) */\r\n        /* usersAPI.getProfile(userId)\r\n        .then(response =>{\r\n            console.log(response.data)\r\n            this.props.setUserProfile(response.data)\r\n        }) */\r\n    }\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.match.params.userId !==prevProps.match.params.userId)\r\n        this.refreshProfile()\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        \r\n        //if(!this.props.isAuth)return <Redirect to={'/login'}/>\r\n        return (\r\n            <div>\r\n                <Content {...this.props} getStatus={this.props.getStatus} \r\n                isOwner={!this.props.match.params.userId} updateStatus={this.props.updateStatus}\r\n                setUserPhoto={this.props.setUserPhoto} setAboutData={this.props.setAboutData}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    //usersInfo: state.usersPage,\r\n    state: state.ContentPage,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {getUserProfile, getStatus, updateStatus, setUserPhoto, setAboutData}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ContentContainer)","import { NavLink } from 'react-router-dom'\r\nimport classes from './Header.module.css'\r\n\r\n\r\n\r\nexport default function Header (props){\r\n    \r\n    return(\r\n        <div className={classes.Header}>\r\n        <img src={'https://s.clipartkey.com/mpngs/s/213-2139319_vigorous-piglets-and-finishers-feed-pig-icon.png'} alt=\"\"></img>\r\n        <p>MySocialWeb</p>\r\n        <div className={classes.loginBlock}>\r\n            \r\n            { props.isAuth ? <div className={classes.loginBlock} onClick={()=>{props.logout()}}><span tooltip=\"click to logout\" flow=\"left\">{props.login}</span></div>\r\n            : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}","import Header from './Header'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../Redux/authReduser'\r\n\r\nclass HeaderContainer extends React.Component {\r\n   /*  componentDidMount(){\r\n        this.props.getAuthUserData();\r\n        \r\n    } */\r\n    render(){\r\n        return(\r\n        <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer)","import React from 'react'\r\nimport classes from './Registration.module.css'\r\nimport {login} from '../../Redux/authReduser'\r\nimport { Formik } from 'formik';\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst LoginForm = (props)=>{\r\n    debugger\r\n    return(\r\n\r\n    <div>\r\n        <Formik\r\n            initialValues={{ email: '', password: '', captcha: '', rememberMe: false }}\r\n            validate={values => {\r\n                const errors = {};\r\n                if (!values.password) {\r\n                    errors.password = 'Required';\r\n                } \r\n                if (props.state.captchaUrl & !values.captcha) {\r\n                    errors.captcha = 'Required';\r\n                } \r\n                \r\n                if (values.password.length > 21) {\r\n                    errors.password = 'Must be 20 characters or less';\r\n                }\r\n                if (values.email.length > 21) {\r\n                    errors.email = 'Must be 20 characters or less';\r\n                }\r\n                if (!values.email) {\r\n                    errors.email = 'Required';\r\n                } \r\n                if (\r\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                    errors.email = 'Invalid email address';\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(formObj)=>{\r\n                \r\n                props.login(formObj.email, formObj.password, formObj.rememberMe, formObj.captcha)\r\n                }}\r\n            >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                <div className={classes.Reg}>Email:\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"enter you email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                    />\r\n                    \r\n                    <span className={classes.errormessage}>{errors.email && touched.email && errors.email}\r\n                    </span>\r\n                </div> \r\n                <div className={classes.Reg2}>Password: \r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"enter you password\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}\r\n                    />\r\n                        <span className={classes.errormessage}>{errors.password && touched.password && errors.password}</span>\r\n                    \r\n                </div>\r\n                <div className={classes.checkbox}> \r\n                    Remember me\r\n                    <input type=\"checkbox\" name=\"rememberMe\" onChange={handleChange}\r\n                        />\r\n                    \r\n                </div>\r\n                {props.state.captchaUrl\r\n                ?\r\n                    <div className={classes.Reg3}>\r\n                        <img src={props.state.captchaUrl} />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"captcha\"\r\n                            placeholder=\"enter captcha symbols\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.captcha}\r\n                        />\r\n                    </div>\r\n                : null\r\n                }\r\n                \r\n                <button type=\"submit\" /* disabled={isSubmitting} */>\r\n                    🐷\r\n                </button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n    )\r\n}\r\n\r\n const Login=(props)=>{\r\n    if(props.state.isAuth===true){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\nreturn(\r\n        <div className={classes.Registration}>\r\n            <h1>Log in</h1>\r\n            <LoginForm state={props.state} login={props.login}/>\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => ({\r\n\r\n    state: state.auth,\r\n    \r\n})\r\nexport default connect(mapStateToProps,{login})(Login)\r\n\r\n","import React from 'react'\nimport {Route, withRouter, \nBrowserRouter, Switch, Redirect} from  'react-router-dom'\nimport './App.css';\nimport Lefter from './Components/Lefter/Lefter';\nimport Registration from './Components/Registration/Registration';\nimport Wall from './Components/Wall/Wall';\nimport {connect} from 'react-redux'\nimport Settings from './Components/Settings/Settings';\nimport MessagesContainer from './Components/Messages/MessagesContainer';\nimport FindUsersContainer from './Components/FindUsers/FindUsersContainer';\nimport ContentContainer from './Components/Content/ContentContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Login from './Components/Registration/Login';\nimport {initialize} from './Redux/appReduser'\nimport Loader from './Components/UI/Loader/Loader';\nimport { compose } from 'redux';\nimport store from './Redux/reduxStore'\nimport {Provider} from 'react-redux'\n\nclass App extends React.Component {\n  \n  catchAllUnhandledErrors = (reason, promiseRejectionEvent) =>{\n      alert(reason)\n      console.error(promiseRejectionEvent)\n    }\n  componentDidMount(){\n    this.props.initialize();\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\n  componentWillUnmount(){\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n  }\n  /* const [count, setCount] = useState(1);\n  let registr= () => setCount(1) */\n  \n  render(){\n    \n    if(!this.props.initialized)return <Loader/>\n    return (\n      \n        <div className=\"App\">\n          <div className=\"Header\"><HeaderContainer  /></div>\n          <div className='Lefter'><Lefter /></div>\n          {\n            <Switch>\n            <Route exact path='/' render={()=><Redirect to={'/profile'}/>}/>\n            <Route path='/signin'><Registration registr={this.registr}/></Route>\n            <Route path='/login'><Login /></Route>\n            <Route path='/profile/:userId?'><ContentContainer /></Route>\n            <Route path='/wall'><Wall /></Route>\n            <Route path='/messages'><MessagesContainer /></Route>\n            <Route path='/settings'><Settings /></Route>\n            <Route path='/find'><FindUsersContainer /> </Route>\n            <Route path='*'><div>404 not found</div> </Route>\n            </Switch>\n          \n          }\n        </div>\n      \n    )\n  }\n}\nconst mapStateToProps =(state)=>({\n  initialized: state.app.initialized\n})\n\nlet  AppContainer = compose (\n  withRouter,\n  connect (mapStateToProps, {initialize}))(App)\n\nlet MainApp =(props) =>{\n  return<BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer  />\n      </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/reduxStore'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport { BrowserRouter} from  'react-router-dom'\nimport MainApp from './App';\n\n\n\n\n  ReactDOM.render(\n    \n        <MainApp  />\n      ,\n    document.getElementById('root')\n  );\n\n\n\n \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Registration\":\"Registration_Registration__AFPaL\",\"Reg\":\"Registration_Reg__29xqw\",\"Reg2\":\"Registration_Reg2__2iSNQ\",\"Reg3\":\"Registration_Reg3__1jSNK\",\"error\":\"Registration_error__255mg\",\"success\":\"Registration_success__2buZG\",\"primary\":\"Registration_primary__2IL_M\",\"checkbox\":\"Registration_checkbox__2DlKr\",\"errormessage\":\"Registration_errormessage__3SVWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"AboutDataForm_About__3AW0t\",\"info\":\"AboutDataForm_info__2ml-9\",\"MainAbout\":\"AboutDataForm_MainAbout__1lP-K\",\"advertisement\":\"AboutDataForm_advertisement__2m93T\",\"heading\":\"AboutDataForm_heading__3Q5nR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FindUsers\":\"findUsers_FindUsers__3dtDG\",\"User\":\"findUsers_User__2Vmvi\",\"photo\":\"findUsers_photo__1T_YU\",\"img\":\"findUsers_img__1Q6V7\",\"status\":\"findUsers_status__3UWG4\",\"info\":\"findUsers_info__1OBAx\",\"name\":\"findUsers_name__3oc5G\",\"page\":\"findUsers_page__eDpSx\",\"selectedPage\":\"findUsers_selectedPage__3cgcP\",\"active\":\"findUsers_active__uwG6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader_center__1zykS\",\"Loader2\":\"Loader_Loader2__rWpDV\",\"ldio-byiquow0r9p-1\":\"Loader_ldio-byiquow0r9p-1__3M0YO\",\"ldio-byiquow0r9p-2\":\"Loader_ldio-byiquow0r9p-2__2X4y2\",\"ldio-byiquow0r9p-3\":\"Loader_ldio-byiquow0r9p-3__1xFYx\",\"Loader\":\"Loader_Loader__32Th_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__3GEJe\",\"dialog\":\"Messages_dialog__3hM8Q\",\"active\":\"Messages_active__2z9bd\",\"messageWindow\":\"Messages_messageWindow__PYCuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2hIci\",\"loginBlock\":\"Header_loginBlock__3xoMw\",\"tooltips-horz\":\"Header_tooltips-horz__3bJmt\",\"tooltips-vert\":\"Header_tooltips-vert__34QaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content2\":\"Content_Content2__9MEJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__3kTm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pic\":\"Pic_Pic__2qGER\",\"hidden\":\"Pic_hidden__33MgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__2Of1d\",\"Images\":\"Posts_Images__3ThLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Post_message__3ETw_\",\"likes\":\"Post_likes__xlCCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lefter\":\"Lefter_Lefter__1GlzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wall\":\"Wall_Wall__3VVXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1TVbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextContent\":\"TextContent_TextContent__MYSpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__1d8A3\",\"info\":\"About_info__3iofd\",\"MyName\":\"About_MyName__rB3Zy\",\"infoContacts\":\"About_infoContacts__2bblA\",\"EditBTN\":\"About_EditBTN__1kWVI\",\"answer\":\"About_answer__2rino\",\"foo\":\"About_foo__3-xka\",\"fss\":\"About_fss__lEJ9M\",\"contacts\":\"About_contacts__2lnkT\",\"socialMedia\":\"About_socialMedia__1d8xY\",\"vk\":\"About_vk__1_xVO\",\"facebook\":\"About_facebook__1I6nV\",\"website\":\"About_website__2kotn\",\"twitter\":\"About_twitter__LBZUY\",\"instagram\":\"About_instagram__1YROA\",\"youtube\":\"About_youtube__1g5ZC\",\"github\":\"About_github__2ItN_\",\"mainLink\":\"About_mainLink__1kZOT\"};"],"sourceRoot":""}