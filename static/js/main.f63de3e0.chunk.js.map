{"version":3,"sources":["reportWebVitals.js","Redux/dialogReducer.js","api/api.js","Redux/profileReducer.js","Redux/FindUsersReducer.js","Redux/authReduser.js","Redux/appReduser.js","Redux/reduxStore.js","Components/Lefter/Lefter.jsx","Components/Registration/Registration.jsx","Components/Wall/Wall.jsx","Components/Settings/Settings.jsx","hoc/withAuthRedirect.js","Components/UI/Loader/FormsControl/FormsControls.js","Components/Messages/Messages.jsx","Components/Messages/MessagesContainer.jsx","Components/FindUsers/findUsers.jsx","Components/UI/Loader/Loader.js","Redux/usersSelectors.js","Components/FindUsers/FindUsersContainer.jsx","Components/Content/About/About.jsx","Components/Content/About/Status/StatusWithHooks.jsx","Components/Content/Pic/Pic.jsx","Components/Content/Posts/Post/Post.jsx","Components/Content/Posts/Posts.jsx","Components/Content/Posts/PostsContainer.jsx","Components/Content/TextContent/TextContent.jsx","Components/Content/Content.jsx","Components/Content/ContentContainer.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Registration/Login.jsx","App.jsx","index.js","Components/Registration/Registration.module.css","Components/FindUsers/findUsers.module.css","Components/Content/About/About.module.css","Components/Content/Content.module.css","Components/Messages/Messages.module.css","Components/UI/Loader/Loader.module.css","Components/Header/Header.module.css","Components/UI/Loader/FormsControl/FormsControls.module.css","Components/Content/Posts/Posts.module.css","Components/Content/Posts/Post/Post.module.css","Components/Lefter/Lefter.module.css","Components/Wall/Wall.module.css","Components/Content/About/Status/Status.module.css","Components/Content/Pic/Pic.module.css","Components/Content/TextContent/TextContent.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dialogs","name","id","messages","message","instance","axios","create","withCredentials","headers","baseURL","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","loginAPI","email","password","rememberMe","posts","likes","profile","setUserStatus","type","users","photoURL","location","city","country","friends","totalUsersCount","isFetching","inProgress","setCurrentPage","isFetchingCount","toggleInProgress","login","isAuth","setUserData","getAuthUserData","dispatch","resultCode","initialized","reducers","combineReducers","ContentPage","state","action","newPost","stateCopy","push","PostsPage","newMessage","usersPage","map","e","followed","totalCount","filter","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Lefter","className","classes","to","Registration","props","nameInput","React","createRef","emailInput","onSubmit","preventDefault","Reg","ref","onClick","current","value","console","log","registr","catch","error","Wall","Content2","Settings","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","connect","TextArea","styles","formControl","input","meta","TextForm","formObj","sendMessage","handleSubmit","invalid","component","placeholder","disabled","Messages","DialogItem","dialogsItem","i","index","Message","m","messageItems","dialog","messageWindow","sendMessageContainer","func","newMessageBody","FindUsers","pages","page","activeClass","active","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","onPageChanged","User","photo","img","src","alt","some","tofriend","tounfriend","info","Loader","center","Loader2","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getInProgress","a","getUsersCreator","items","length","p","About","fullName","StatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","activateEditMode","currentTarget","onBlur","autoFocus","Pic","Post","Fragment","PostsContainer","newPostContainer","text","newPostActionCreator","postsElements","Posts","Images","TextContent","Content","ContentContainer","match","params","authUserId","getUserProfile","withRouter","Header","loginBlock","logout","tooltip","flow","HeaderContainer","LoginForm","initialValues","validate","values","errors","test","touched","handleChange","handleBlur","isSubmitting","errormessage","Reg2","checkbox","alert","App","initialize","path","MessagesContainer","AppContainer","MainApp","ReactDOM","render","document","getElementById","module","exports"],"mappings":"0HAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCNVQ,EAAe,CACfC,QAAS,CACL,CAACC,KAAK,MAAOC,GAAG,KAChB,CAACD,KAAK,KAAMC,GAAG,KACf,CAACD,KAAK,QAASC,GAAG,KAClB,CAACD,KAAK,QAASC,GAAG,MACtBC,SAAU,CACN,CAACC,QAAQ,qBAAsBF,GAAG,KAClC,CAACE,QAAQ,kBAAmBF,GAAG,KAC/B,CAACE,QAAQ,8BAA+BF,GAAG,O,YCR7CG,E,OAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,CACL,UAAW,wCAEfC,QAAS,kDAGAC,EAAU,SACTC,EAAaC,GACnB,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,GAAW,IAEjEpB,MAAK,SAAAsB,GACF,OAAOA,EAASC,SALfL,EAAU,SAQZM,GACH,OAAOZ,EAASa,KAAT,iBAAwBD,GAAS,GAAI,KATvCN,EAAU,SAYVM,GACL,OAAOZ,EAASc,OAAT,iBAA0BF,GAAU,KAbtCN,EAAU,SAgBRM,GACX,OAAOG,EAAWC,WAAWJ,IAGpBG,EAAY,CAErBC,WAFqB,SAEVJ,GACP,OAAOZ,EAASS,IAAT,kBAAwBG,KAEnCK,UALqB,SAKXL,GACN,OAAOZ,EAASS,IAAT,yBAA+BG,KAE1CM,aARqB,SAQRC,GACT,OAAOnB,EAASoB,IAAT,iBAA+B,CAACD,aAGlCE,EAAS,WAEd,OAAOrB,EAASS,IAAT,YAGFa,EAAU,SAEbC,EAAOC,EAAUC,GACnB,OAAOzB,EAASa,KAAT,aAA4B,CAACU,QAAOC,WAAUC,gBAHhDH,EAAU,WAMf,OAAOtB,EAASc,OAAT,eCnDXpB,EAAe,CACfgC,MAAO,CACC,CAAC3B,QAAS,kBAAmBF,GAAG,EAAI8B,MAAM,GAC1C,CAAC5B,QAAS,4BAA6BF,GAAG,EAAI8B,MAAM,MAExDC,QAAS,KACTT,OAAQ,IAsCL,SAASU,EAAcV,GAC1B,MAAO,CAACW,KAAM,YAAaX,UAExB,I,yBC9CPzB,EAAe,CACfqC,MAAO,CACH,CAACC,SAAS,wDAAwDpC,KAAM,SAAUqC,SAAU,CAACC,KAAK,QAAQC,QAAQ,UAAYhB,OAAO,OAAQiB,SAAS,EAAOvC,GAAG,GAChK,CAACmC,SAAS,yDAAyDpC,KAAM,UAAWqC,SAAU,CAACC,KAAK,SAASC,QAAQ,UAAahB,OAAO,kBAAmBiB,SAAS,EAAMvC,GAAG,GAC9K,CAACmC,SAAS,yDAAyDpC,KAAM,QAASqC,SAAU,CAACC,KAAK,SAASC,QAAQ,UAAahB,OAAO,qBAAqBiB,SAAS,EAAMvC,GAAG,IAElLW,SAAS,EACT6B,gBAAgB,GAChB9B,YAAY,EACZ+B,YAAW,EACXC,WAAY,IAgFT,SAASC,EAAejC,GAEvB,MAAO,CAACuB,KAAM,cAAevB,eAM1B,SAASkC,EAAgBH,GAC5B,MAAO,CAACR,KAAM,mBAAoBQ,cAE/B,SAASI,EAAiBH,EAAY3B,GACzC,MAAO,CAACkB,KAAM,aAAcS,aAAY3B,UAGrC,ICzGPlB,EAAe,CACfkB,OAAQ,KACRW,MAAO,KACPoB,MAAM,KACNC,QAAQ,GAoBD,SAASC,EAAYjC,EAAQW,EAAOoB,EAAOC,GAC9C,MAAO,CAACd,KAAM,cAAenB,KAAK,CAAEC,SAAQW,QAAOoB,QAAOC,WAEvD,IAAME,EAAkB,kBAAM,SAACC,GAClC,OAAO1B,IACNjC,MAAK,SAAAsB,GACF,GAA8B,IAA3BA,EAASC,KAAKqC,WAAe,CAAC,IAAD,EACJtC,EAASC,KAAKA,KAAjCd,EADuB,EACvBA,GAAI0B,EADmB,EACnBA,MAAOoB,EADY,EACZA,MAChBI,EAASF,EAAYhD,EAAI0B,EAAOoB,GAAO,UAQ5C,I,QCvCPjD,EAAe,CACfuD,aAAa,GAyBN,ICtBPC,EAAUC,YAAgB,CAC1BC,YJG2B,WAAiC,IAAhCC,EAA+B,uDAAzB3D,EAAc4D,EAAW,uCAC3D,OAAOA,EAAOxB,MACV,IAAK,UAED,IAAIyB,EAAS,CACTxD,QAASuD,EAAOvD,QAChBF,GAAI,EACJ8B,MAAO,GAEP6B,EAAU,eAAIH,GAKlB,OAJAG,EAAU9B,MAAV,YAAoB2B,EAAM3B,OAC1B8B,EAAU9B,MAAM+B,KAAKF,GAGdC,EAEX,IAAK,iBACD,OAAO,2BAAIH,GAAX,IAAkBzB,QAAQ0B,EAAO1B,UAErC,IAAK,YACD,OAAO,2BAAIyB,GAAX,IAAkBlC,OAAOmC,EAAOnC,SAGxC,QACI,OAAOkC,II1BXK,UNIyB,WAAiC,IAAhCL,EAA+B,uDAAzB3D,EAAc4D,EAAW,uCACzD,OAAOA,EAAOxB,MACV,IAAK,aAED,IAAI6B,EAAY,CACZ5D,QAASuD,EAAOvD,QAChBF,GAAI,GAER,OAAO,2BAAIwD,GAAX,IACIvD,SAAS,GAAD,mBAAKuD,EAAMvD,UAAX,CAAqB6D,MAGrC,QAAS,OAAON,IMfpBO,UHoB6B,WAAiC,IAAhCP,EAA+B,uDAAzB3D,EAAc4D,EAAW,uCAC7D,OAAOA,EAAOxB,MACV,IAAK,YACD,kCACOuB,GADP,IAEItB,MAAOsB,EAAMtB,MAAM8B,KAAI,SAAAC,GACnB,OAAGA,EAAEjE,KAAOyD,EAAOzD,GACR,2BAAIiE,GAAX,IAAcC,UAAU,IAErBD,OAInB,IAAK,eACD,kCACOT,GADP,IAEItB,MAAOsB,EAAMtB,MAAM8B,KAAI,SAAAC,GACnB,OAAGR,EAAOzD,KAAOiE,EAAEjE,GACR,2BAAIiE,GAAX,IAAcC,UAAU,IAErBD,OAInB,IAAK,WAED,OAAO,2BAAKT,GAAZ,IAAmBtB,MAAM,YAAMuB,EAAOvB,SAE1C,IAAK,cAED,OAAO,2BAAKsB,GAAZ,IAAmB9C,YAAa+C,EAAO/C,cAE3C,IAAK,kBAED,OAAO,2BAAK8C,GAAZ,IAAmBhB,gBAAiBiB,EAAOU,aAE/C,IAAK,mBAED,OAAO,2BAAKX,GAAZ,IAAmBf,WAAYgB,EAAOhB,aAE1C,IAAK,aAED,OAAO,2BAAKe,GAAZ,IACId,WAAYe,EAAOf,WAAP,sBACNc,EAAMd,YADA,CACYe,EAAO1C,SAC7B,CAACyC,EAAMd,WAAW0B,QAAO,SAAApE,GAAE,OAAEA,IAAKyD,EAAO1C,aAGvD,QACI,OAAOyC,IGpEXa,KFDwB,WAAiC,IAAhCb,EAA+B,uDAAzB3D,EAAc4D,EAAW,uCAExD,OAAOA,EAAOxB,MACV,IAAK,cACD,OAAO,2BACAuB,GACAC,EAAO3C,MAItB,QACI,OAAO0C,IETXc,IDJuB,WAAiC,IAAhCd,EAA+B,uDAAzB3D,EAAc4D,EAAW,uCAEvD,OAAOA,EAAOxB,MACV,IAAK,iBAED,OAAO,2BACAuB,GADP,IAEIJ,aAAY,IAKxB,QACI,OAAOI,MCLRe,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYvB,EAAWkB,EAAiBM,YAAgBC,OAGvEN,OAAOG,MAAMA,EAEEA,Q,wGCpBA,SAASI,IACpB,OACI,qBAAKC,UAAWC,IAAQF,OAAxB,SACA,+BACI,6BAAI,cAAC,IAAD,CAASG,GAAG,WAAZ,uBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,QAAZ,oBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,YAAZ,wBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,YAAZ,wBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,QAAZ,8B,qBCED,SAASC,EAAcC,GAoBlC,IAAIC,EAAUC,IAAMC,YAChBC,EAAWF,IAAMC,YAMrB,OAEI,sBAAKP,UAAWC,IAAQE,aAAxB,UACA,+CACA,uBACA,uBAAMM,SATQ,SAACxB,GACfA,EAAEyB,kBAQF,UACI,qBAAKV,UAAWC,IAAQU,IAAxB,mBAAwC,uBAAO1D,KAAK,OAAO2D,IAAKP,IAAa,uBAC7E,qBAAKL,UAAWC,IAAQU,IAAxB,oBAAyC,uBAAO1D,KAAK,OAAO2D,IAAKJ,IAAa,uBAC9E,wBAAQK,QAAS,WAjCzB,IAAsB9F,EAAM2B,EAAN3B,EAiCsBsF,EAAUS,QAAQC,MAjClCrE,EAiCwC8D,EAAWM,QAAQC,MA/BnF3F,OAAW,qDAAsD,CAC7DL,OACA2B,UAEHnC,MAAK,SAAUsB,GACZwE,EAAUS,QAAQC,MAAM,GACxBP,EAAWM,QAAQC,MAAM,GACzBC,QAAQC,IAAIpF,GACZuE,EAAMc,aAETC,OAAM,SAAUC,GACbJ,QAAQC,IAAIG,OAoBZ,sB,sBC9BGC,OAbf,WAEQ,OACI,qBAAKrB,UAAWC,KAAQqB,SAAxB,+F,4BCUGC,OAbf,WAEQ,OACI,qBAAKvB,UAAWC,KAAQsB,SAAxB,uHCJRC,GAA6B,SAAChD,GAAD,MAAY,CACrCT,OAAQS,EAAMa,KAAKtB,SAGd0D,GAAmB,SAACC,GAAe,IACtCC,EADqC,uKAInC,OAAIC,KAAKxB,MAAMrC,OACR,cAAC2D,EAAD,eAAeE,KAAKxB,QADE,cAAC,IAAD,CAAUF,GAAI,eAJR,GACXI,IAAMoB,WAUtC,OAFqCG,aAAQL,GAARK,CAAoCF,I,iDCfhEG,GAAW,SAAC1B,GAErB,OACI,sBAAKJ,UAAW+B,KAAOC,YAAY,IAAID,KAAOX,MAA9C,UACI,8BACA,wCAAchB,EAAM6B,UAEnB7B,EAAM8B,KAAKd,OAAShB,EAAM8B,KAAKd,OAAS,kDC6CrD,IAAMe,GAAW,SAAC/B,GACd,OACI,cAAC,KAAD,CAAMK,SAAU,SAAC2B,GACThC,EAAMiC,YAAYD,GAClBpB,QAAQC,IAAImB,IAFpB,SAMK,gBAAGE,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,QAAjB,OACG,uBAAM9B,SAAU6B,EAAhB,UAEA,cAAC,KAAD,CAAQE,UAAWV,GAAW7E,KAAK,WAAWwF,YAAY,gBAC1D1H,KAAK,mBACL,wBAAQkC,KAAK,SAASyF,SAAUH,EAAhC,iCAODI,GApEf,SAAmBvC,GAEf,SAASwC,EAAaxC,GACtB,OAAO,8BAAK,cAAC,IAAD,CAASF,GAAI,aAAaE,EAAMpF,GAAhC,SAAqCoF,EAAMrF,SAGvD,IAAI8H,EAAczC,EAAMtF,QAAQkE,KAAI,SAAC8D,GACjC,OAAO,cAACF,EAAD,CAAY7H,KAAM+H,EAAE/H,KAAoBC,GAAI8H,EAAE9H,IAAf8H,EAAEC,UAGxCC,EAAU,SAAC5C,GACf,OAAO,8BAAMA,EAAM6C,KAEfC,EAAe9C,EAAMlF,QAAQ8D,KAAI,SAAC8D,GAClC,OAAO,cAACE,EAAD,CAASC,EAAGH,EAAE5H,SAAc4H,EAAEC,UAcrC,OACI,sBAAK/C,UAAWC,KAAQ0C,SAAxB,UACI,qBAAK3C,UAAWC,KAAQkD,OAAxB,SACMN,IAGN,sBAAK7C,UAAWC,KAAQmD,cAAxB,UACI,8BAAOF,IAGP,cAAC,GAAD,CAAUb,YAnB1B,SAAqBD,GAEjBhC,EAAMiD,qBAAqBjB,aCWpB1C,eACXmC,cAlBoB,SAACrD,GAErB,MAAO,CACH1D,QAAS0D,EAAMK,UAAU/D,QACzBI,QAASsD,EAAMK,UAAU5D,aAIP,SAACqI,GACvB,MAAM,CACFD,qBAAsB,SAACjB,GACnBkB,EdAG,CAACrG,KAAM,aAAc/B,QcAKkH,EAAQmB,iBACrCnB,EAAQmB,eAAe,QAO/B9B,GAFW/B,CAGbiD,I,wCCmCaa,OAvEf,SAAoBpD,GAIhB,IADA,IAAIqD,EAAM,GACFX,EAAE,EAAGA,GAAG,EAAGA,IACfW,EAAM7E,KAAKkE,GAGX,OAEI,sBAAK9C,UAAWC,KAAQuD,UAAxB,UACI,qBAAKxD,UAAWC,KAAQyD,KAAxB,SACI,cAAC,KAAD,CACAC,YAAa1D,KAAQ2D,OACrBC,WAAYzD,EAAMA,MAAM1E,YACxBoI,kBAAmB,GACnBC,gBAAiB3D,EAAMA,MAAM5C,gBAC7BwG,mBAAoB,EACpBC,SAAU7D,EAAM8D,kBAgBpB9D,EAAMA,MAAMlD,MAAM8B,KAAI,SAAAC,GAAC,OACvB,sBAAgBe,UAAWC,KAAQkE,KAAnC,UACI,iCACI,qBAAKnE,UAAWC,KAAQmE,MAAxB,SACI,cAAC,IAAD,CAASlE,GAAI,aAAajB,EAAEjE,GAA5B,SACI,qBAAKgF,UAAWC,KAAQoE,IAAKC,IAAkB,MAAbrF,EAAE9B,SAAkB8B,EAAE9B,SAAW,gDAAiDoH,IAAI,SAGhI,+BAEiB,IAAbtF,EAAEC,SAAmB,wBAAQwD,SAAUtC,EAAMA,MAAM1C,WAAW8G,MAAK,SAAAxJ,GAAE,OAAIA,IAAKiE,EAAEjE,MAAK6F,QAAS,WAC1FT,EAAMA,MAAMqE,SAASxF,EAAEjE,KADN,uBAGpB,wBAAQ0H,SAAUtC,EAAMA,MAAM1C,WAAW8G,MAAK,SAACxJ,GAAD,OAAQA,IAAKiE,EAAEjE,MAAK6F,QAAS,WACxET,EAAMA,MAAMsE,WAAWzF,EAAEjE,KAD5B,2BAMT,sBAAKgF,UAAWC,KAAQ0E,KAAxB,UAEQ,qBAAK3E,UAAWC,KAAQlF,KAAxB,SAA+BkE,EAAElE,OAIrC,+BACI,sBAAKiF,UAAWC,KAAQ3D,OAAxB,cAAkC2C,EAAE3C,OAApC,cAzBF2C,EAAEjE,W,oBC7Bb4J,GARA,SAAAxE,GAAK,OAChB,qBAAKJ,UAAWC,KAAQ4E,OAAxB,SACI,qBAAK7E,UAAWC,KAAQ2E,OAAxB,SAAgC,sBAAK5E,UAAWC,KAAQ6E,QAAxB,UAChC,gCAAK,wBAAW,wBAAW,2BAAiB,gCAAK,wBAAW,wBAAW,mCCNlEC,GAAU,SAACvG,GACpB,OAAOA,EAAMO,UAAU7B,OAEd8H,GAAa,SAACxG,GACvB,OAAOA,EAAMO,UAAUpD,UAEdsJ,GAAoB,SAACzG,GAC9B,OAAOA,EAAMO,UAAUvB,iBAEd0H,GAAgB,SAAC1G,GAC1B,OAAOA,EAAMO,UAAUrD,aAEdyJ,GAAe,SAAC3G,GACzB,OAAOA,EAAMO,UAAUtB,YAEd2H,GAAe,SAAC5G,GACzB,OAAOA,EAAMO,UAAUrB,YCmC3B,IAWegC,eAEXmC,cAbgB,SAACrD,GACjB,MAAO,CACHtB,MAAO6H,GAASvG,GAChB7C,SAAUqJ,GAAYxG,GACtBhB,gBAAiByH,GAAoBzG,GACrC9C,YAAawJ,GAAe1G,GAC5Bf,WAAY0H,GAAc3G,GAC1Bd,WAAY0H,GAAc5G,MAML,CACrBkG,WfoEqB,SAAC3I,GACtB,8CAAO,WAAMmC,GAAN,SAAAmH,EAAA,6DACHnH,EAASL,GAAiB,EAAM9B,IAD7B,SAEiBN,EAAkBM,GAFnC,OAImC,IAJnC,OAIiBD,KAAKqC,YACbD,EAnDT,CAACjB,KAAM,eAAgBjC,GAmDOe,IAEzBmC,EAASL,GAAiB,EAAO9B,IAPtC,2CAAP,uDepEA0I,SfuDmB,SAAC1I,GACpB,8CAAO,WAAMmC,GAAN,SAAAmH,EAAA,6DACHnH,EAASL,GAAiB,EAAM9B,IAD7B,SAEkBN,EAAgBM,GAFlC,OAImC,IAJnC,OAIiBD,KAAKqC,YACbD,EA1CT,CAACjB,KAAM,YAAajC,GA0CQe,IAEvBmC,EAASL,GAAiB,EAAO9B,IAPtC,2CAAP,uDevDA4B,eAAgBA,EAChBC,gBAAiBA,EACjBC,mBACAyH,gBfsC0B,SAAC5J,EAAaC,GACxC,8CAAO,WAAMuC,GAAN,eAAAmH,EAAA,6DACHnH,EAASN,GAAgB,IACzBM,EAASP,EAAejC,IAFrB,SAGaD,EAAkBC,EAAaC,GAH5C,OAGCG,EAHD,OAICoC,EAASN,GAAgB,IACzBM,EAvBD,CAACjB,KAAM,WAAYC,MAuBEpB,EAAKyJ,QACzBrH,EAhBD,CAACjB,KAAM,kBAAmBkC,WAgBGrD,EAAKqD,aANlC,2CAAP,yDe/COO,EApDf,SAA6BU,GAkBrB,OAjBoB,IAArBA,EAAMlD,MAAMsI,QACfpF,EAAMkF,gBAAgBlF,EAAM1E,YAAa0E,EAAMzE,UAiBvC,oCAEoB,IAApByE,EAAM3C,WACN,cAAC,GAAD,CAAW2C,MAAOA,EAAO8D,cARb,SAACuB,GACjBrF,EAAMkF,gBAAgBG,EAAGrF,EAAMzE,aAQ1B,cAAC,GAAD,S,oBC9BE,SAAS+J,GAAOtF,GAE3B,OAAIA,EAAMA,MAAMrD,QAKZ,sBAAKiD,UAAWC,KAAQyF,MAAxB,UACI,qBAAK1F,UAAWC,KAAQ0E,KAAxB,kBAEA,gCAAMvE,EAAMA,MAAMrD,QAAQ4I,SAAS,wBAGnC,qBAAK3F,UAAWC,KAAQ0E,KAAxB,mBACI,qBAAK3E,UAAWC,KAAQ0E,KAAxB,sBACA,qBAAK3E,UAAWC,KAAQ0E,KAAxB,uBAZD,cAAC,GAAD,I,qDC+CAiB,GAjDO,SAACxF,GAAU,IAAD,EAEEyF,oBAAS,GAFX,oBAEvBC,EAFuB,KAEbC,EAFa,OAGFF,mBAASzF,EAAM9D,QAHb,oBAGvBA,EAHuB,KAGf0J,EAHe,KAK5BC,qBAAU,WACND,EAAU5F,EAAM9D,UACjB,CAAC8D,EAAM9D,SAEV,IAAM4J,EAAkB,WACpBH,GAAY,IAWhB,OACI,iCACMD,GACE,qBAAK9F,UAAWC,KAAQ3D,OAAxB,SACM8D,EAAM9D,OAGN,qBAAKuE,QAASqF,EAAd,SACG9F,EAAM9D,SAHT,qBAAKuE,QAASqF,EAAd,SACG,gBAOZJ,GACG,8BACI,uBACI7B,SArBE,SAAChF,GAEnB+G,EAAU/G,EAAEkH,cAAcpF,QAoBVqF,OA1BM,WACtBL,GAAY,GACZ3F,EAAM/D,aAAaC,IAyBH+J,WAAW,EACXtF,MAAOzE,U,oBCzChB,SAASgK,GAAKlG,GAEzB,OACI,sBAAKJ,UAAWC,KAAQqG,IAAxB,UACA,qBAAKhC,IAAK,kKAAmKC,IAAI,KACjL,cAAC,GAAD,CAAiBjI,OAAQ8D,EAAMA,MAAM9D,OAAQD,aAAc+D,EAAM/D,kB,4CCL1D,SAASkK,GAAKnG,GAErB,OACA,eAAC,IAAMoG,SAAP,WACI,qBAAKxG,UAAWC,KAAQ/E,QAAxB,SAAkCkF,EAAMlF,UACxC,sBAAK8E,UAAWC,KAAQnD,MAAxB,UACA,qBAAKwH,IAAI,4DAA6DC,IAAI,2BACzEnE,EAAMtD,YCoBnB,IAAMqF,GAAW,SAAC/B,GACd,OACI,cAAC,KAAD,CAAMK,SAAU,SAAC2B,GACbhC,EAAM1B,QAAQ0D,GACVpB,QAAQC,IAAImB,IAFpB,SAIK,gBAAGE,EAAH,EAAGA,aAAH,OACG,uBAAM7B,SAAU6B,EAAhB,UACA,cAAC,KAAD,CAAQE,UAAU,WAAWvF,KAAK,WAAWwF,YAAY,gBAAgB1H,KAAK,mBAC9E,wBAAQkC,KAAK,SAAb,iCCCDwJ,GAHM5E,cAPC,SAACrD,GAEnB,MAAM,CACF3B,MAAO2B,EAAMD,YAAY1B,UAbR,SAACyG,GACtB,MAAM,CACFoD,iBAAmB,SAACtE,GAChB,IAAIuE,EAAKvE,EAAQmB,eAEjBD,EtBeD,SAA8BqD,GACjC,MAAO,CAAC1J,KAAM,UAAW/B,QAASyL,GsBhBzBC,CAAqBD,IAC1BvE,EAAQmB,eAAe,OAWd1B,ED/BN,SAAgBzB,GAI3B,IAAIyG,EAAgBzG,EAAMvD,MAAMmC,KAAI,SAAAC,GAAM,OAAO,cAACsH,GAAD,CAAMrL,QAAS+D,EAAE/D,QAAoBF,GAAIiE,EAAEjE,GAAI8B,MAAOmC,EAAEnC,OAAzBmC,EAAEjE,OAOlF,OACI,eAAC,IAAMwL,SAAP,WACI,qBAAKxG,UAAWC,KAAQ6G,MAAxB,SACI,cAAC,GAAD,CAAUpI,QAPR,SAAC0D,GACXhC,EAAMsG,iBAAiBtE,QAUnB,gCAAK,qBAAKpC,UAAWC,KAAQ8G,OAAQzC,IAAI,yDAAyDC,IAAI,2BAAtG,cACA,8BAAMsC,U,oBEvBH,SAASG,KACpB,OACI,qBAAKhH,UAAWC,KAAQ+G,YAAxB,gCC4BOC,OArBf,SAAkB7G,GAIV,OACI,qBAAKJ,UAAWC,KAAQqB,SAAxB,SAEI,eAAC,IAAMkF,SAAP,WACA,cAACd,GAAD,CAAOtF,MAAOA,EAAM5B,QACpB,cAAC8H,GAAD,CAAKlG,MAAOA,EAAM5B,MAAOpC,UAAWgE,EAAMhE,UAAWC,aAAc+D,EAAM/D,eACzE,cAAC2K,GAAD,IACA,cAAC,GAAD,UCbVE,G,kLAIE,IAAInL,EAAS6F,KAAKxB,MAAM+G,MAAMC,OAAOrL,OACjCA,IACAA,EAAO6F,KAAKxB,MAAMiH,YAEtBzF,KAAKxB,MAAMkH,eAAevL,GAC1B6F,KAAKxB,MAAMhE,UAAUL,K,+BAarB,OACI,qBAAKiE,UAAWC,KAAQqB,SAAxB,SACI,cAAC,GAAD,2BAAaM,KAAKxB,OAAlB,IAAyBhE,UAAWwF,KAAKxB,MAAMhE,UAAWC,aAAcuF,KAAKxB,MAAM/D,sB,GAxBpEiE,IAAMoB,WAsCtBhC,eACXmC,cARkB,SAACrD,GAAD,MAAY,CAE9BA,MAAOA,EAAMD,YACb8I,WAAY7I,EAAMa,KAAKtD,OACvBgC,OAAQS,EAAMa,KAAKtB,UAIM,CAACuJ,ezBCI,SAACvL,GAAD,OAAW,SAACmC,GACtCzC,EAAoBM,GACnBxB,MAAK,SAAAsB,GACFqC,EARG,CAACjB,KAAM,iBAAkBF,QAQJlB,EAASC,YyBJCM,UzBOjB,SAACL,GAAD,OAAW,SAACmC,GACjChC,EAAWE,UAAUL,GACpBxB,MAAK,SAAAsB,GACFqC,EAASlB,EAAcnB,EAASC,YyBVaO,azBazB,SAACC,GAAD,OAAW,SAAC4B,GACpChC,EAAWG,aAAaC,GACvB/B,MAAK,SAAAsB,GAC4B,IAA3BA,EAASC,KAAKqC,YACjBD,EAASlB,EAAcV,WyBhB/BiL,IACA9F,GAHW/B,CAIbwH,I,oBC9Ca,SAASM,GAAQpH,GAE5B,OACI,sBAAKJ,UAAWC,KAAQuH,OAAxB,UACA,qBAAKlD,IAAK,gGAAiGC,IAAI,KAC/G,4CACA,qBAAKvE,UAAWC,KAAQwH,WAAxB,SAEMrH,EAAMrC,OAAS,qBAAKiC,UAAWC,KAAQwH,WAAY5G,QAAS,WAAKT,EAAMsH,UAAxD,SAAmE,sBAAMC,QAAQ,kBAAkBC,KAAK,OAArC,SAA6CxH,EAAMtC,UACrI,cAAC,IAAD,CAASoC,GAAI,SAAb,wB,ICTR2H,G,uKAME,OACA,cAACL,GAAD,eAAY5F,KAAKxB,Y,GAPKE,IAAMoB,WAiBrBG,iBALS,SAACrD,GAAD,MAAY,CAChCT,OAAQS,EAAMa,KAAKtB,OACnBD,MAAOU,EAAMa,KAAKvB,SAGmB,CAAC4J,OzBgChB,yDAAM,WAAMxJ,GAAN,SAAAmH,EAAA,sEACH5I,IADG,OAGU,IAHV,OAGRX,KAAKqC,YACbD,EAASF,EAAY,KAAM,KAAM,MAAM,IAJvB,2CAAN,wDyBhCX6D,CAAoCgG,I,SCd7CC,GAAY,SAAC1H,GAEf,OAEA,8BACI,cAAC,KAAD,CACI2H,cAAe,CAAErL,MAAO,GAAIC,SAAU,GAAIC,YAAY,GACtDoL,SAAU,SAAAC,GACN,IAAMC,EAAS,GAmBf,OAlBKD,EAAOtL,WACRuL,EAAOvL,SAAW,YAGlBsL,EAAOtL,SAAS6I,OAAS,KACzB0C,EAAOvL,SAAW,iCAElBsL,EAAOvL,MAAM8I,OAAS,KACtB0C,EAAOxL,MAAQ,iCAEduL,EAAOvL,QACRwL,EAAOxL,MAAQ,YAGd,2CAA2CyL,KAAKF,EAAOvL,SAExDwL,EAAOxL,MAAQ,yBAEZwL,GAEXzH,SAAU,SAAC2B,GAEPhC,EAAMtC,MAAMsE,EAAQ1F,MAAO0F,EAAQzF,SAAUyF,EAAQxF,aA1B7D,SA6BK,gBACGqL,EADH,EACGA,OACAC,EAFH,EAEGA,OACAE,EAHH,EAGGA,QACAC,EAJH,EAIGA,aACAC,EALH,EAKGA,WACAhG,EANH,EAMGA,aACAiG,EAPH,EAOGA,aAPH,OASG,uBAAM9H,SAAU6B,EAAhB,UACA,sBAAKtC,UAAWC,IAAQU,IAAxB,mBACI,uBACI1D,KAAK,QACLlC,KAAK,QACLkJ,SAAUoE,EACVjC,OAAQkC,EACRvH,MAAOkH,EAAOvL,QAGlB,sBAAMsD,UAAWC,IAAQuI,aAAzB,SAAwCN,EAAOxL,OAAS0L,EAAQ1L,OAASwL,EAAOxL,WAGpF,sBAAKsD,UAAWC,IAAQwI,KAAxB,sBACI,uBACIxL,KAAK,WACLlC,KAAK,WACLkJ,SAAUoE,EACVjC,OAAQkC,EACRvH,MAAOkH,EAAOtL,WAEd,sBAAMqD,UAAWC,IAAQuI,aAAzB,SAAwCN,EAAOvL,UAAYyL,EAAQzL,UAAYuL,EAAOvL,cAG9F,sBAAKqD,UAAWC,IAAQyI,SAAxB,wBAEI,uBAAOzL,KAAK,WAAWlC,KAAK,aAAakJ,SAAUoE,OAIvD,wBAAQpL,KAAK,SAASyF,SAAU6F,EAAhC,mCAyBD1G,iBAJO,SAACrD,GAAD,MAAY,CAC9BA,MAAOA,EAAMa,QAGsB,CAACvB,M1B/Df,SAACpB,EAAOC,EAAUC,GAAlB,8CAAiC,WAAMsB,GAAN,eAAAmH,EAAA,sEAC9B5I,EAAeC,EAAOC,EAAUC,GADF,OAGhB,KAF9Bf,EAD8C,QAGlCC,KAAKqC,YACbD,EAASD,KAEiB,IAA3BpC,EAASC,KAAKqC,aAVFlD,EAWGY,EAASC,KAAKb,SATpC0N,MAAM1N,IAE4C,iCAJtD,IAAuBA,IAI+B,OAAjC,wD0B+DV4G,EAfF,SAACzB,GACV,OAAwB,IAArBA,EAAM5B,MAAMT,OACJ,cAAC,IAAD,CAAUmC,GAAI,aAGrB,sBAAKF,UAAWC,IAAQE,aAAxB,UACI,wCACA,cAAC,GAAD,CAAW3B,MAAO4B,EAAM5B,MAAOV,MAAOsC,EAAMtC,cC/ElD8K,G,kLAGFhH,KAAKxB,MAAMyI,e,+BAQX,OAAIjH,KAAKxB,MAAMhC,YAGX,sBAAK4B,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SAAwB,cAAC,GAAD,MACxB,qBAAKA,UAAU,SAAf,SAAwB,cAACD,EAAD,MAEtB,gCACA,cAAC,IAAD,CAAO+I,KAAK,UAAZ,SAAsB,cAAC3I,EAAD,CAAce,QAASU,KAAKV,YAClD,cAAC,IAAD,CAAO4H,KAAK,SAAZ,SAAqB,cAAC,GAAD,MACrB,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SAAgC,cAAC,GAAD,MAChC,cAAC,IAAD,CAAOA,KAAK,QAAZ,SAAoB,cAAC,GAAD,MACpB,cAAC,IAAD,CAAOA,KAAK,YAAZ,SAAwB,cAACC,GAAD,MACxB,cAAC,IAAD,CAAOD,KAAK,YAAZ,SAAwB,cAAC,GAAD,MACxB,eAAC,IAAD,CAAOA,KAAK,QAAZ,UAAoB,cAAC,GAAD,IAApB,aAd0B,cAAC,GAAD,Q,GAXpBxI,IAAMoB,WAsCnBsH,GAAetJ,YAClB6H,IACA1F,cANqB,SAACrD,GAAD,MAAU,CAC/BJ,YAAaI,EAAMc,IAAIlB,eAKG,CAACyK,W1B7BC,kBAAM,SAAC3K,GACfA,EAASD,KAEf1D,MAAK,WACT2D,EAPG,CAACjB,KAAM,0B0B8BFyC,CAEuBkJ,IAU5BK,GARF,SAAC7I,GACZ,OAAM,cAAC,IAAD,UACF,cAAC,KAAD,CAAUT,MAAOA,EAAjB,SACE,cAACqJ,GAAD,SCnDNE,IAASC,OAEH,cAAC,GAAD,IAEJC,SAASC,eAAe,SAU5BjP,K,mBC1BAkP,EAAOC,QAAU,CAAC,aAAe,mCAAmC,IAAM,0BAA0B,KAAO,2BAA2B,MAAQ,4BAA4B,QAAU,8BAA8B,QAAU,8BAA8B,SAAW,+BAA+B,aAAe,qC,mBCAnTD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,yBAAyB,IAAM,uBAAuB,OAAS,0BAA0B,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,aAAe,gCAAgC,OAAS,4B,mBCAhVD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,mBCAtDD,EAAOC,QAAU,CAAC,SAAW,4B,mBCA7BD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,OAAS,yBAAyB,cAAgB,kC,mBCA5ID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,qBAAqB,mCAAmC,qBAAqB,mCAAmC,qBAAqB,mCAAmC,OAAS,yB,mBCArQD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,gBAAgB,8BAA8B,gBAAgB,gC,mBCAxJD,EAAOC,QAAU,CAAC,MAAQ,+B,mBCA1BD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,wB,mBCAxDD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,MAAQ,sB,mBCA1DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,wCCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,YAAc,mC","file":"static/js/main.f63de3e0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nlet initialState = {\r\n    dialogs: [\r\n        {name:'Gri', id:'1'},\r\n        {name:'Ma', id:'2'},\r\n        {name:'Sonya', id:'3'},\r\n        {name:'Dasha', id:'4'}],\r\n    messages: [\r\n        {message:'hello, how are you', id:'1'},\r\n        {message:'bla bla bla bla', id:'2'},\r\n        {message:'i hate this world soo much!', id:'3'}]\r\n}\r\n\r\n\r\nexport const dialogReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'NEWMESSAGE': {\r\n            \r\n            let newMessage= {\r\n                message: action.message,\r\n                id: 6\r\n            }\r\n            return {...state,\r\n                messages:[...state.messages, newMessage]\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport function newMessageActionCreator(text) {\r\n    \r\n        return {type: 'NEWMESSAGE', message: text }\r\n        \r\n    };\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': \"cd349944-1a1f-484a-81a7-9d5dd0866219\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const usersAPI ={\r\n    getUsers (currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,{\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    friend(userId){\r\n        return instance.post(`follow/${userId}`,{}, {\r\n        })\r\n    },\r\n    unfriend(userId){\r\n        return instance.delete(`follow/${userId}`, {\r\n        })\r\n    },\r\n    getProfile(userId){\r\n    return profileAPI.getProfile(userId);\r\n    }\r\n};\r\nexport const profileAPI ={\r\n    \r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status})\r\n    }\r\n};\r\nexport const authAPI ={\r\n    me () {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\nexport const loginAPI ={\r\n    \r\n    login(email, password, rememberMe){\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n            {message: 'Helloy idiotos!', id:1 , likes:3},\r\n            {message: 'Why live is soo easy? 0_o', id:2 , likes:100},\r\n        ],\r\n        profile: null,\r\n        status: \"\"\r\n}\r\n\r\n\r\nexport  const profileReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADDPOST':{\r\n            \r\n            let newPost= {\r\n                message: action.message,\r\n                id: 5,\r\n                likes: 0\r\n            }\r\n            let stateCopy={...state}\r\n            stateCopy.posts=[...state.posts]\r\n            stateCopy.posts.push(newPost)\r\n            //stateCopy.action.message=''\r\n        \r\n            return stateCopy\r\n        }\r\n        case 'SETUSERPROFILE':{\r\n            return {...state, profile:action.profile}\r\n        }\r\n        case 'SETSTATUS':{\r\n            return {...state, status:action.status}\r\n        }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n    export function newPostActionCreator(text) {\r\n        return {type: 'ADDPOST', message: text }\r\n    };\r\n    export function setUserProfile(profile) {\r\n        return {type: 'SETUSERPROFILE', profile }\r\n    };\r\n    export function setUserStatus(status) {\r\n        return {type: 'SETSTATUS', status }\r\n    };\r\n    export const getUserProfile = (userId) =>(dispatch) =>{\r\n        usersAPI.getProfile(userId)\r\n        .then(response =>{\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n    };\r\n    export const getStatus = (userId) =>(dispatch) =>{\r\n        profileAPI.getStatus(userId)\r\n        .then(response =>{\r\n            dispatch(setUserStatus(response.data))\r\n        })\r\n    };\r\n    export const updateStatus = (status) =>(dispatch) =>{\r\n        profileAPI.updateStatus(status)\r\n        .then(response =>{\r\n            if(response.data.resultCode===0){\r\n            dispatch(setUserStatus(status))\r\n        }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    ","import {usersAPI} from '../api/api'\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n        {photoURL:'https://homm3sod.ru/upload/iblock/2d1/Hero_Alamar.png',name: 'Robert', location: {city:'Dubna',country:'Russia'} , status:'hate', friends: false, id:1},\r\n        {photoURL:'https://homm3sod.ru/upload/iblock/013/Hero_Grindan.png',name: 'Grindan', location: {city:'Skovde',country:'Sweden'}  , status:'Jesus loves you', friends: true, id:2},\r\n        {photoURL:'https://homm3sod.ru/upload/iblock/e78/Hero_Labetha.png',name: 'Dasha', location: {city:'Moscow',country:'Russia'}  , status:'im always learning',friends: true, id:3}\r\n    ],\r\n    pageSize:5,\r\n    totalUsersCount:54,\r\n    currentPage:1,\r\n    isFetching:false,\r\n    inProgress: [],\r\n    /* friends:{\r\n        GrishaId:{\r\n            GrishaId: SashaID,\r\n            GrishaId: MishaID,\r\n            GrishaId: SoniaID,\r\n            GrishaId: PetiaID\r\n        },\r\n        SashaID:{\r\n            SashaID: SashaID,\r\n            SashaID: MishaID,\r\n            SashaID: SoniaID,\r\n            SashaID: PetiaID\r\n        }\r\n    } */\r\n}\r\n\r\n\r\nexport  const FindUsersReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADDFRIEND':{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(e =>{\r\n                    if(e.id === action.id) {\r\n                        return {...e, followed: true}\r\n                    }\r\n                    return e\r\n                })\r\n            }\r\n        }\r\n        case 'REMOVEFRIEND':{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(e =>{\r\n                    if(action.id === e.id){\r\n                        return {...e, followed: false}\r\n                    }\r\n                    return e\r\n                })\r\n            }\r\n        }\r\n        case 'SETUSERS':{\r\n            \r\n            return { ...state, users: [ ...action.users]}\r\n        }\r\n        case 'CURRENTPAGE':{\r\n            \r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case 'TOTALUSERSCOUNT':{\r\n            \r\n            return { ...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case 'ISFETCHINGTOGGLE':{\r\n            \r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case 'INPROGRESS':{\r\n            \r\n            return { ...state,\r\n                inProgress: action.inProgress \r\n                ? [...state.inProgress, action.userId]\r\n                : [state.inProgress.filter(id=>id!==action.userId)] }\r\n        }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport function friendsAC(id) {\r\n        return {type: 'ADDFRIEND', id  }\r\n    };\r\nexport function unFriendsAC(id) {\r\n        return {type: 'REMOVEFRIEND', id }\r\n    };\r\nexport function setUsersAC(users) {\r\n        return {type: 'SETUSERS', users }\r\n    };\r\nexport function setCurrentPage(currentPage) {\r\n    \r\n        return {type: 'CURRENTPAGE', currentPage }\r\n    };\r\n    export function setTotalUsersCount(totalCount) {\r\n    \r\n        return {type: 'TOTALUSERSCOUNT', totalCount}\r\n    };\r\n    export function isFetchingCount(isFetching) {\r\n        return {type: 'ISFETCHINGTOGGLE', isFetching}\r\n    };\r\n    export function toggleInProgress(inProgress, userId) {\r\n        return {type: 'INPROGRESS', inProgress, userId}\r\n    };\r\n    \r\n    export const getUsersCreator =(currentPage, pageSize) =>{\r\n        return async(dispatch) =>{\r\n            dispatch(isFetchingCount(true))\r\n            dispatch(setCurrentPage(currentPage))\r\n            let data= await usersAPI.getUsers(currentPage, pageSize)\r\n                dispatch(isFetchingCount(false))\r\n                dispatch(setUsersAC(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    export const tofriend =(userId) =>{\r\n        return async(dispatch) =>{\r\n            dispatch(toggleInProgress(true, userId))\r\n            let response = await usersAPI.friend(userId)\r\n                \r\n                    if(response.data.resultCode===0){\r\n                        dispatch(friendsAC(userId))\r\n                    }\r\n                    dispatch(toggleInProgress(false, userId))\r\n                \r\n        }\r\n    }\r\n    export const tounfriend =(userId) =>{\r\n        return async(dispatch) =>{\r\n            dispatch(toggleInProgress(true, userId))\r\n            let response= await usersAPI.unfriend(userId)\r\n                \r\n                    if(response.data.resultCode===0){\r\n                        dispatch(unFriendsAC(userId))\r\n                    }\r\n                    dispatch(toggleInProgress(false, userId))\r\n                \r\n        \r\n        } \r\n    }","import { authAPI, loginAPI } from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login:null,\r\n    isAuth: false\r\n}\r\n\r\n\r\nexport  const authReducer = (state=initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case 'SETUSERDATA':{\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n    \r\n    export function setUserData(userId, email, login, isAuth) {\r\n        return {type: 'SETUSERDATA', data:{ userId, email, login, isAuth} }\r\n    };\r\n    export const getAuthUserData = () => (dispatch) =>{\r\n        return authAPI.me()\r\n        .then(response =>{\r\n            if(response.data.resultCode===0){\r\n                let {id, email, login} =response.data.data\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        })\r\n    }\r\n    function errorResponse(messages){\r\n        \r\n        alert(messages)\r\n    }\r\n    export const login = (email, password, rememberMe) => async(dispatch) =>{\r\n        let response= await loginAPI.login(email, password, rememberMe)\r\n        \r\n            if(response.data.resultCode===0){\r\n                dispatch(getAuthUserData())\r\n            }\r\n            if(response.data.resultCode!==0){\r\n                errorResponse(response.data.messages)\r\n            }\r\n        \r\n    }\r\n    export const logout = () => async(dispatch) =>{\r\n        let response = await loginAPI.logout()\r\n        \r\n            if(response.data.resultCode===0){\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n        \r\n    }\r\n\r\n\r\n    ","\r\nimport { getAuthUserData } from \"./authReduser\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nexport  const appReducer = (state=initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case 'SETINITIALIZED':{\r\n            //debugger\r\n            return {\r\n                ...state,\r\n                initialized:true\r\n            }\r\n        }\r\n        \r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n \r\nexport function initializedSuccess() {\r\n        return {type: 'SETINITIALIZED' }\r\n    };\r\n\r\n    export const initialize = () => (dispatch) =>{\r\n        let promise = dispatch(getAuthUserData())\r\n\r\n        promise.then(()=>{\r\n            dispatch(initializedSuccess())\r\n            \r\n        })\r\n    }","import {applyMiddleware, combineReducers, createStore,  compose} from 'redux'\r\nimport {dialogReducer} from './dialogReducer'\r\nimport {profileReducer} from './profileReducer'\r\nimport {FindUsersReducer} from './FindUsersReducer'\r\nimport { authReducer } from './authReduser';\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { appReducer } from './appReduser';\r\n\r\nlet reducers= combineReducers({\r\n    ContentPage:profileReducer,\r\n    PostsPage:dialogReducer,\r\n    usersPage:FindUsersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nwindow.store=store\r\n\r\nexport default store;","import { NavLink } from 'react-router-dom'\r\nimport classes from './Lefter.module.css'\r\n\r\nexport default function Lefter (){\r\n    return(\r\n        <div className={classes.Lefter}>\r\n        <ul>\r\n            <li><NavLink to='/profile'>My Page</NavLink></li>\r\n            <li><NavLink to='/wall'>Wall</NavLink></li>\r\n            <li><NavLink to='/messages'>Messages</NavLink></li>\r\n            <li><NavLink to='/settings'>Settings</NavLink></li>\r\n            <li><NavLink to='/find'>Find_User</NavLink></li>\r\n        </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport classes from './Registration.module.css'\r\nimport * as axios from 'axios'\r\n\r\n/* const LoginForm = (props)=>{\r\n    <form onSubmit={handleSubmit}>\r\n            <div className={classes.Reg}>Name:</div><input type=\"text\" ref={nameInput} /><br/>\r\n            <div className={classes.Reg}>Email:</div><input type=\"text\" ref={emailInput}/><br/>\r\n            <button onClick={() =>{registration(nameInput.current.value,emailInput.current.value)}}>Ok</button>\r\n        \r\n        </form>\r\n} */\r\n\r\nexport default function Registration (props){\r\n    \r\n    function registration(name, email) {\r\n        \r\n        axios.post('https://react-quiz-c5f6b.firebaseio.com/users.json', {\r\n            name,\r\n            email\r\n        })\r\n        .then(function (response) {\r\n            nameInput.current.value=''\r\n            emailInput.current.value=''\r\n            console.log(response);\r\n            props.registr()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    let nameInput=React.createRef()\r\n    let emailInput=React.createRef()\r\n\r\n    let handleSubmit= (e) =>{\r\n        e.preventDefault()\r\n    }\r\n        \r\n    return(\r\n        \r\n        <div className={classes.Registration}>\r\n        <div>Registration</div>\r\n        <hr/>\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={classes.Reg}>Name:</div><input type=\"text\" ref={nameInput} /><br/>\r\n            <div className={classes.Reg}>Email:</div><input type=\"text\" ref={emailInput}/><br/>\r\n            <button onClick={() =>{registration(nameInput.current.value,emailInput.current.value)}}>Ok</button>\r\n        \r\n        </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport classes from'./Wall.module.css';\r\n\r\n\r\nfunction Wall () {\r\n    \r\n        return (\r\n            <div className={classes.Content2}>\r\n                \r\n                \r\n                Тут будет стена\r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Wall;\r\n","import React from 'react'\r\n\r\nimport classes from'./Settings.module.css';\r\n\r\n\r\nfunction Settings () {\r\n    \r\n        return (\r\n            <div className={classes.Settings}>\r\n                \r\n                \r\n                Тут будут настройки\r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            \r\n            if(!this.props.isAuth)return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import styles from './FormsControls.module.css'\r\n\r\nexport const TextArea = (props) =>{\r\n    \r\n    return(\r\n        <div className={styles.formControl+' '+styles.error}>\r\n            <div>\r\n            <textarea {...props.input}/>\r\n            </div>\r\n            {props.meta.error && props.meta.error && <span>some error</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink} from 'react-router-dom';\r\nimport classes from'./Messages.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { TextArea } from '../UI/Loader/FormsControl/FormsControls';\r\n\r\nfunction Messages (props) {\r\n    debugger\r\n    function DialogItem  (props)  {\r\n    return <div><NavLink to={'/messages/'+props.id}>{props.name}</NavLink></div>\r\n}\r\n\r\n    let dialogsItem = props.dialogs.map((i) => {\r\n        return <DialogItem name={i.name} key={i.index} id={i.id}/>\r\n    })\r\n\r\n    let Message = (props) => {\r\n    return <div>{props.m}</div>\r\n    }\r\n    let messageItems = props.message.map((i) => {\r\n        return <Message m={i.message} key={i.index} />\r\n    })\r\n\r\n    //let textreference=React.createRef()\r\n\r\n    function sendMessage(formObj){\r\n        \r\n        props.sendMessageContainer(formObj)\r\n        \r\n    }\r\n    \r\n    //if(!props.isAuth)return <Redirect to={'/login'}/>\r\n    \r\n\r\n        return (\r\n            <div className={classes.Messages}>\r\n                <div className={classes.dialog}>\r\n                    { dialogsItem }\r\n                    \r\n                </div>\r\n                <div className={classes.messageWindow}>\r\n                    <div>{ messageItems  }</div>\r\n                    {/* <div><textarea ref={textreference}/><button onClick={() =>sendMessage(props)}>send</button></div> */}\r\n                    \r\n                    <TextForm sendMessage={sendMessage}/>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n//const maxLength10=maxLength(10)\r\n\r\nconst TextForm = (props)=>{\r\n    return (\r\n        <Form onSubmit={(formObj)=>{\r\n                props.sendMessage(formObj)\r\n                console.log(formObj);}\r\n                }\r\n            //validate={ required, maxLength10}\r\n            >\r\n            {({ handleSubmit, invalid }) => (\r\n                <form onSubmit={handleSubmit}\r\n                >\r\n                <Field  component={TextArea}  type=\"textarea\" placeholder='enter message'\r\n                name='newMessageBody' />\r\n                <button type='submit' disabled={invalid}>🐷</button>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Messages;\r\n","\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {newMessageActionCreator} from '../../Redux/dialogReducer'\r\nimport Messages from './Messages';\r\n\r\n/* function MessagesContainer (props) {\r\n    \r\n    let dialogs = props.state.dialogs\r\n    let message = props.state.messages\r\n\r\n    function sendMessageContainer(textreference){\r\n        props.func(newMessageActionCreator(textreference.current.value))\r\n        textreference.current.value=\" \"\r\n    }\r\n        return (\r\n            <Messages dialogs={dialogs} message={message} sendMessageContainer={sendMessageContainer} />\r\n        )\r\n}\r\n */\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n    \r\n    return {\r\n        dialogs: state.PostsPage.dialogs,\r\n        message: state.PostsPage.messages,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps =(func) => { \r\n    return{\r\n        sendMessageContainer: (formObj) => {\r\n            func(newMessageActionCreator(formObj.newMessageBody))\r\n            formObj.newMessageBody=\"\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages);\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from'./findUsers.module.css';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nfunction FindUsers (props) {\r\n\r\n    //let pagesCount = Math.ceil(props.props.totalUsersCount/props.props.pageSize);\r\n    let pages=[];\r\n    for(let i=1; i<=6; i++){\r\n        pages.push(i)\r\n        \r\n    }\r\n        return (\r\n            \r\n            <div className={classes.FindUsers}>\r\n                <div className={classes.page}>\r\n                    <Pagination\r\n                    activeClass={classes.active}\r\n                    activePage={props.props.currentPage}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={props.props.totalUsersCount}\r\n                    pageRangeDisplayed={5}\r\n                    onChange={props.onPageChanged}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className={classes.page}>\r\n                    \r\n                    {pages.map(p => {\r\n                        return <span key={p.id} className={props.props.currentPage === p ? classes.selectedPage : null}\r\n                        \r\n                        onClick={() => { props.onPageChanged(p) }}\r\n                        >{p}</span>\r\n                    })}\r\n                    \r\n                    \r\n                </div> */}\r\n            {\r\n                props.props.users.map(e =>\r\n                <div key={e.id} className={classes.User}>\r\n                    <span>\r\n                        <div className={classes.photo}>\r\n                            <NavLink to={'./profile/'+e.id}>\r\n                                <img className={classes.img} src={e.photoURL !=null ? e.photoURL : 'https://image.pngaaa.com/430/263430-small.png'} alt=''/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                            e.followed===false ? <button disabled={props.props.inProgress.some(id => id===e.id)} onClick={()=>{\r\n                                props.props.tofriend(e.id)\r\n                                }}>addFriend</button>\r\n                            :<button disabled={props.props.inProgress.some((id) => id===e.id)} onClick={()=>{\r\n                                props.props.tounfriend(e.id)\r\n                                }} >UnFriend</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <div className={classes.info}>\r\n                        \r\n                            <div className={classes.name}>{e.name}</div>\r\n                            {/* <div className={classes.info}>{e.location.city }</div>\r\n                            <div className={classes.info}>{e.location.country}</div> */}\r\n                        \r\n                        <span>\r\n                            <div className={classes.status}>\"{e.status}\"</div>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default FindUsers;\r\n","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}><div className={classes.Loader2}>\r\n        <div><div></div><div></div><div></div></div><div><div></div><div></div><div></div></div>\r\n        </div></div>\r\n    </div>\r\n)\r\n\r\nexport default Loader\r\n\r\n\r\n","export const getUsers =(state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize =(state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount =(state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage =(state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching =(state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getInProgress =(state) => {\r\n    return state.usersPage.inProgress\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { tofriend, tounfriend, setCurrentPage, \r\n    isFetchingCount,  getUsersCreator, toggleInProgress } from '../../Redux/FindUsersReducer'\r\nimport FindUsers from './findUsers'\r\nimport Loader from '../UI/Loader/Loader'\r\nimport { compose } from 'redux'\r\nimport { getPageSize, getUsers, getTotalUsersCount, getCurrentPage,\r\n    getInProgress, getIsFetching, } from '../../Redux/usersSelectors'\r\n\r\nfunction FindUsersContainer (props) {\r\n    if(props.users.length===3){\r\n    props.getUsersCreator(props.currentPage, props.pageSize);\r\n    }\r\n    /* if(props.users.length===3){\r\n        props.isFetchingCount(true)\r\n        getUsers(props.currentPage, props.pageSize).then(data =>{\r\n            props.isFetchingCount(false)\r\n            props.setUsers(data.items)\r\n            props.setTotalUsersCount(data.totalCount)\r\n            console.log(data.items)\r\n            \r\n        })\r\n    }    */\r\n    let onPageChanged = (p)=>{\r\n        props.getUsersCreator(p, props.pageSize)\r\n    }\r\n    \r\n        return (\r\n            <>\r\n            {\r\n            props.isFetching=== false ? \r\n            <FindUsers props={props} onPageChanged={onPageChanged}/>\r\n            :<Loader />\r\n            }\r\n            </>\r\n        )\r\n    \r\n}\r\n\r\n\r\n/* let mapStateToProps=(state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount:state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        inProgress: state.usersPage.inProgress\r\n    }\r\n} */\r\nlet mapStateToProps=(state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount (state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        inProgress: getInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        tounfriend,\r\n        tofriend,\r\n        setCurrentPage: setCurrentPage,\r\n        isFetchingCount: isFetchingCount,\r\n        toggleInProgress,\r\n        getUsersCreator\r\n        })\r\n)(FindUsersContainer)\r\n\r\n","import Loader from '../../UI/Loader/Loader'\r\nimport classes from './About.module.css'\r\n\r\nexport default function About (props){\r\n    \r\n    if(!props.props.profile ){\r\n        return <Loader />\r\n    }\r\n\r\n    return(\r\n        <div className={classes.About}> \r\n            <div className={classes.info}>info</div>\r\n            \r\n            <div>{props.props.profile.fullName}<div/>\r\n            \r\n\r\n            <div className={classes.info}>Name </div>\r\n                <div className={classes.info}>Location</div>\r\n                <div className={classes.info}>Age</div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport classes from './Status.module.css'\r\n\r\n\r\nconst StatusWithHooks=(props)=> {\r\n    \r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    \r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode =() =>{\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode =()=>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange =(e)=>{\r\n        //debugger\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {!editMode &&\r\n                <div className={classes.status}>\r\n                    {!props.status \r\n                    ? <div onClick={activateEditMode}>\r\n                        {\"no status\"}</div>\r\n                    : <div onClick={activateEditMode}>\r\n                        {props.status}</div>\r\n                    }\r\n                    \r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input \r\n                        onChange={onStatusChange} \r\n                        onBlur={deactivateEditMode}  \r\n                        autoFocus={true} \r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default StatusWithHooks","import StatusWithHooks from '../About/Status/StatusWithHooks'\r\nimport classes from './Pic.module.css'\r\n\r\nexport default function Pic (props){\r\n    \r\n    return(\r\n        <div className={classes.Pic}>\r\n        <img src={'https://sun9-33.userapi.com/impf/xZea1cGfLOj-MhChgkIKsgDSZGEuGSOVHs1WHA/YtDlw7A5LTo.jpg?size=2476x1212&quality=96&proxy=1&sign=9da40de598b9f92db3f300c6d278e04d'} alt=\"\"></img>\r\n        <StatusWithHooks status={props.props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nexport default function Post(props) {\r\n    \r\n        return (\r\n        <React.Fragment>\r\n            <div className={classes.message}>{props.message}</div>\r\n            <div className={classes.likes}>\r\n            <img src=\"https://img.icons8.com/doodle/48/000000/facebook-like.png\"  alt=\"Foo eating a sandwich.\"/>\r\n            {props.likes}\r\n            </div>\r\n        </React.Fragment>\r\n        \r\n        )\r\n    }","import React from 'react'\r\nimport classes from './Posts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Form, Field} from 'react-final-form'\r\n\r\n\r\nexport default function Posts (props){\r\n    //debugger\r\n    \r\n\r\n    let postsElements = props.posts.map(e =>{ return <Post message={e.message} key={e.id} id={e.id} likes={e.likes} />})\r\n    \r\n    \r\n    let newPost = (formObj) => {\r\n        props.newPostContainer(formObj)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className={classes.Posts}> \r\n                <TextForm newPost={newPost}/> \r\n                {/* <button onClick={ newPost }>send</button> */}\r\n            </div>\r\n            \r\n            <div><img className={classes.Images} src='https://homm3sod.ru/upload/iblock/5d4/Hero_Ufretin.png' alt=\"Foo eating a sandwich.\"/> Nikname</div>\r\n            <div>{postsElements}</div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst TextForm = (props)=>{\r\n    return (\r\n        <Form onSubmit={(formObj)=>{\r\n            props.newPost(formObj)\r\n                console.log(formObj);}\r\n                }>\r\n            {({ handleSubmit }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                <Field  component='textarea' type=\"textarea\" placeholder='enter message' name='newMessageBody' />\r\n                <button type='submit'>🐷</button>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}","\r\nimport Posts from './Posts'\r\nimport {newPostActionCreator} from '../../../Redux/profileReducer'\r\nimport { connect } from 'react-redux'\r\n\r\n/*  function PostsContainer (props){\r\n    \r\n    \r\n    let newPostContainer = (textReference) => {\r\n        let text=textReference.current.value\r\n        \r\n        props.func(newPostActionCreator(text))\r\n        textReference.current.value=\" \"\r\n    }\r\n\r\n    return(\r\n        <Posts posts={props.posts} newPostContainer={newPostContainer}/>\r\n    )\r\n} */\r\n\r\nlet mapDispatchToProps = (func) => {\r\n    return{\r\n        newPostContainer:  (formObj) => {\r\n            let text=formObj.newMessageBody\r\n            \r\n            func(newPostActionCreator(text))\r\n            formObj.newMessageBody=\"\"\r\n        }\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return{\r\n        posts: state.ContentPage.posts\r\n    }\r\n}\r\n\r\nconst PostsContainer=connect(mapStateToProps,mapDispatchToProps)(Posts)\r\n\r\n\r\nexport default PostsContainer","import classes from './TextContent.module.css'\r\n\r\nexport default function TextContent (){\r\n    return(\r\n        <div className={classes.TextContent}> This is your wall</div>\r\n    )\r\n}","import React from 'react'\r\nimport About from './About/About';\r\nimport classes from'./Content.module.css';\r\n\r\nimport Pic from './Pic/Pic';\r\n\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport TextContent from './TextContent/TextContent';\r\n\r\n\r\n\r\nfunction Content (props) {\r\n    \r\n    \r\n    \r\n        return (\r\n            <div className={classes.Content2}>\r\n                \r\n                <React.Fragment>\r\n                <About props={props.state}/>\r\n                <Pic props={props.state} getStatus={props.getStatus} updateStatus={props.updateStatus}/>\r\n                <TextContent />\r\n                <PostsContainer />\r\n                </React.Fragment>\r\n                \r\n                \r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Content;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content';\r\nimport classes from'./Content.module.css';\r\nimport {getUserProfile,getStatus, updateStatus} from '../../Redux/profileReducer'\r\nimport {  withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ContentContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        \r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId=this.props.authUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n        /* axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId) */\r\n        /* usersAPI.getProfile(userId)\r\n        .then(response =>{\r\n            console.log(response.data)\r\n            this.props.setUserProfile(response.data)\r\n        }) */\r\n    }\r\n    \r\n    render() {\r\n        \r\n        \r\n        //if(!this.props.isAuth)return <Redirect to={'/login'}/>\r\n        return (\r\n            <div className={classes.Content2}>\r\n                <Content {...this.props} getStatus={this.props.getStatus} updateStatus={this.props.updateStatus}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    \r\n    state: state.ContentPage,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ContentContainer)","import { NavLink } from 'react-router-dom'\r\nimport classes from './Header.module.css'\r\n\r\n\r\n\r\nexport default function Header (props){\r\n    \r\n    return(\r\n        <div className={classes.Header}>\r\n        <img src={'https://s.clipartkey.com/mpngs/s/213-2139319_vigorous-piglets-and-finishers-feed-pig-icon.png'} alt=\"\"></img>\r\n        <p>MySocialWeb</p>\r\n        <div className={classes.loginBlock}>\r\n            \r\n            { props.isAuth ? <div className={classes.loginBlock} onClick={()=>{props.logout()}}><span tooltip=\"click to logout\" flow=\"left\">{props.login}</span></div>\r\n            : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}","import Header from './Header'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../Redux/authReduser'\r\n\r\nclass HeaderContainer extends React.Component {\r\n   /*  componentDidMount(){\r\n        this.props.getAuthUserData();\r\n        \r\n    } */\r\n    render(){\r\n        return(\r\n        <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer)","import React from 'react'\r\nimport classes from './Registration.module.css'\r\nimport {login} from '../../Redux/authReduser'\r\nimport { Formik } from 'formik';\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst LoginForm = (props)=>{\r\n    \r\n    return(\r\n\r\n    <div>\r\n        <Formik\r\n            initialValues={{ email: '', password: '', rememberMe: false }}\r\n            validate={values => {\r\n                const errors = {};\r\n                if (!values.password) {\r\n                    errors.password = 'Required';\r\n                } \r\n                \r\n                if (values.password.length > 21) {\r\n                    errors.password = 'Must be 20 characters or less';\r\n                }\r\n                if (values.email.length > 21) {\r\n                    errors.email = 'Must be 20 characters or less';\r\n                }\r\n                if (!values.email) {\r\n                    errors.email = 'Required';\r\n                } \r\n                if (\r\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                    errors.email = 'Invalid email address';\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(formObj)=>{\r\n                \r\n                props.login(formObj.email, formObj.password, formObj.rememberMe)\r\n                }}\r\n            >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                <div className={classes.Reg}>Email:\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                    />\r\n                    \r\n                    <span className={classes.errormessage}>{errors.email && touched.email && errors.email}\r\n                    </span>\r\n                </div> \r\n                <div className={classes.Reg2}>Password: \r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}\r\n                    />\r\n                        <span className={classes.errormessage}>{errors.password && touched.password && errors.password}</span>\r\n                    \r\n                </div>\r\n                <div className={classes.checkbox}> \r\n                    Remember me\r\n                    <input type=\"checkbox\" name=\"rememberMe\" onChange={handleChange}\r\n                        />\r\n                    \r\n                </div>\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                    🐷\r\n                </button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n    )\r\n}\r\n\r\n const Login=(props)=>{\r\n    if(props.state.isAuth===true){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\nreturn(\r\n        <div className={classes.Registration}>\r\n            <h1>Log in</h1>\r\n            <LoginForm state={props.state} login={props.login}/>\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    state: state.auth,\r\n    \r\n})\r\nexport default connect(mapStateToProps,{login})(Login)\r\n\r\n","import React from 'react'\nimport {Route, withRouter, BrowserRouter} from  'react-router-dom'\nimport './App.css';\nimport Lefter from './Components/Lefter/Lefter';\nimport Registration from './Components/Registration/Registration';\nimport Wall from './Components/Wall/Wall';\nimport {connect} from 'react-redux'\nimport Settings from './Components/Settings/Settings';\nimport MessagesContainer from './Components/Messages/MessagesContainer';\nimport FindUsersContainer from './Components/FindUsers/FindUsersContainer';\nimport ContentContainer from './Components/Content/ContentContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Login from './Components/Registration/Login';\nimport {initialize} from './Redux/appReduser'\nimport Loader from './Components/UI/Loader/Loader';\nimport { compose } from 'redux';\nimport store from './Redux/reduxStore'\nimport {Provider} from 'react-redux'\n\nclass App extends React.Component {\n    \n  componentDidMount(){\n    this.props.initialize();\n    \n  }\n  /* const [count, setCount] = useState(1);\n  let registr= () => setCount(1) */\n  \n  render(){\n    \n    if(!this.props.initialized)return <Loader/>\n    return (\n      \n        <div className=\"App\">\n          <div className=\"Header\"><HeaderContainer  /></div>\n          <div className='Lefter'><Lefter /></div>\n          {\n            <div>\n            <Route path='/signin'><Registration registr={this.registr}/></Route>\n            <Route path='/login'><Login /></Route>\n            <Route path='/profile/:userId?'><ContentContainer /></Route>\n            <Route path='/wall'><Wall /></Route>\n            <Route path='/messages'><MessagesContainer /></Route>\n            <Route path='/settings'><Settings /></Route>\n            <Route path='/find'><FindUsersContainer /> </Route>\n            </div>\n          \n          }\n        </div>\n      \n    )\n  }\n}\nconst mapStateToProps =(state)=>({\n  initialized: state.app.initialized\n})\n\nlet  AppContainer = compose (\n  withRouter,\n  connect (mapStateToProps, {initialize}))(App)\n\nlet MainApp =(props) =>{\n  return<BrowserRouter>\n      <Provider store={store}>\n        <AppContainer  />\n      </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/reduxStore'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport { BrowserRouter} from  'react-router-dom'\nimport MainApp from './App';\n\n\n\n\n  ReactDOM.render(\n    \n        <MainApp  />\n      ,\n    document.getElementById('root')\n  );\n\n\n\n \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Registration\":\"Registration_Registration__AFPaL\",\"Reg\":\"Registration_Reg__29xqw\",\"Reg2\":\"Registration_Reg2__2iSNQ\",\"error\":\"Registration_error__255mg\",\"success\":\"Registration_success__2buZG\",\"primary\":\"Registration_primary__2IL_M\",\"checkbox\":\"Registration_checkbox__2DlKr\",\"errormessage\":\"Registration_errormessage__3SVWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FindUsers\":\"findUsers_FindUsers__3dtDG\",\"User\":\"findUsers_User__2Vmvi\",\"photo\":\"findUsers_photo__1T_YU\",\"img\":\"findUsers_img__1Q6V7\",\"status\":\"findUsers_status__3UWG4\",\"info\":\"findUsers_info__1OBAx\",\"name\":\"findUsers_name__3oc5G\",\"page\":\"findUsers_page__eDpSx\",\"selectedPage\":\"findUsers_selectedPage__3cgcP\",\"active\":\"findUsers_active__uwG6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__1d8A3\",\"info\":\"About_info__3iofd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content2\":\"Content_Content2__9MEJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__3GEJe\",\"dialog\":\"Messages_dialog__3hM8Q\",\"active\":\"Messages_active__2z9bd\",\"messageWindow\":\"Messages_messageWindow__PYCuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader_center__1zykS\",\"Loader2\":\"Loader_Loader2__rWpDV\",\"ldio-byiquow0r9p-1\":\"Loader_ldio-byiquow0r9p-1__3M0YO\",\"ldio-byiquow0r9p-2\":\"Loader_ldio-byiquow0r9p-2__2X4y2\",\"ldio-byiquow0r9p-3\":\"Loader_ldio-byiquow0r9p-3__1xFYx\",\"Loader\":\"Loader_Loader__32Th_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2hIci\",\"loginBlock\":\"Header_loginBlock__3xoMw\",\"tooltips-horz\":\"Header_tooltips-horz__3bJmt\",\"tooltips-vert\":\"Header_tooltips-vert__34QaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__3kTm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__2Of1d\",\"Images\":\"Posts_Images__3ThLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Post_message__3ETw_\",\"likes\":\"Post_likes__xlCCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lefter\":\"Lefter_Lefter__1GlzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wall\":\"Wall_Wall__3VVXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1TVbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pic\":\"Pic_Pic__2qGER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextContent\":\"TextContent_TextContent__MYSpN\"};"],"sourceRoot":""}